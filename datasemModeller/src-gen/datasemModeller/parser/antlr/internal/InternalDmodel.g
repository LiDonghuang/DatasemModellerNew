/*
 * generated by Xtext
 */
grammar InternalDmodel;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package datasemModeller.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package datasemModeller.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import datasemModeller.services.DmodelGrammarAccess;

}

@parser::members {

 	private DmodelGrammarAccess grammarAccess;
 	
    public InternalDmodelParser(TokenStream input, DmodelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "ModelBuilder";	
   	}
   	
   	@Override
   	protected DmodelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModelBuilder
entryRuleModelBuilder returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelBuilderRule()); }
	 iv_ruleModelBuilder=ruleModelBuilder 
	 { $current=$iv_ruleModelBuilder.current; } 
	 EOF 
;

// Rule ModelBuilder
ruleModelBuilder returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ModelBuilder' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelBuilderAccess().getModelBuilderKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getModelBuilderAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelBuilderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelBuilderAccess().getUserLibrariesUserLibrariesParserRuleCall_2_0()); 
	    }
		lv_UserLibraries_2_0=ruleUserLibraries		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelBuilderRule());
	        }
       		set(
       			$current, 
       			"UserLibraries",
        		lv_UserLibraries_2_0, 
        		"datasemModeller.Dmodel.UserLibraries");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelBuilderAccess().getExperimentModelExperimentModelParserRuleCall_3_0()); 
	    }
		lv_ExperimentModel_3_0=ruleExperimentModel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelBuilderRule());
	        }
       		set(
       			$current, 
       			"ExperimentModel",
        		lv_ExperimentModel_3_0, 
        		"datasemModeller.Dmodel.ExperimentModel");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleUserLibraries
entryRuleUserLibraries returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUserLibrariesRule()); }
	 iv_ruleUserLibraries=ruleUserLibraries 
	 { $current=$iv_ruleUserLibraries.current; } 
	 EOF 
;

// Rule UserLibraries
ruleUserLibraries returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='UserLibraries' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUserLibrariesAccess().getUserLibrariesKeyword_0());
    }
	otherlv_1='ServiceProviderTypes' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUserLibrariesAccess().getServiceProviderTypesKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserLibrariesAccess().getServiceProviderTypesServiceProviderTypeParserRuleCall_2_0()); 
	    }
		lv_ServiceProviderTypes_2_0=ruleServiceProviderType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserLibrariesRule());
	        }
       		add(
       			$current, 
       			"ServiceProviderTypes",
        		lv_ServiceProviderTypes_2_0, 
        		"datasemModeller.Dmodel.ServiceProviderType");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='end ServiceProviderTypes' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUserLibrariesAccess().getEndServiceProviderTypesKeyword_3());
    }
	otherlv_4='WorkItemTypes' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUserLibrariesAccess().getWorkItemTypesKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserLibrariesAccess().getWorkItemTypesWorkItemTypeParserRuleCall_5_0()); 
	    }
		lv_WorkItemTypes_5_0=ruleWorkItemType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserLibrariesRule());
	        }
       		add(
       			$current, 
       			"WorkItemTypes",
        		lv_WorkItemTypes_5_0, 
        		"datasemModeller.Dmodel.WorkItemType");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_6='end WorkItemTypes' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUserLibrariesAccess().getEndWorkItemTypesKeyword_6());
    }
	otherlv_7='Services' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUserLibrariesAccess().getServicesKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserLibrariesAccess().getServicesServiceParserRuleCall_8_0()); 
	    }
		lv_Services_8_0=ruleService		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserLibrariesRule());
	        }
       		add(
       			$current, 
       			"Services",
        		lv_Services_8_0, 
        		"datasemModeller.Dmodel.Service");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_9='end Services' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getUserLibrariesAccess().getEndServicesKeyword_9());
    }
	otherlv_10='GovernanceStrategies' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getUserLibrariesAccess().getGovernanceStrategiesKeyword_10());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserLibrariesAccess().getGovernanceStrategiesGovernanceStrategyParserRuleCall_11_0()); 
	    }
		lv_GovernanceStrategies_11_0=ruleGovernanceStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserLibrariesRule());
	        }
       		add(
       			$current, 
       			"GovernanceStrategies",
        		lv_GovernanceStrategies_11_0, 
        		"datasemModeller.Dmodel.GovernanceStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_12='end GovernanceStrategies' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getUserLibrariesAccess().getEndGovernanceStrategiesKeyword_12());
    }
	otherlv_13='end UserLibraries' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getUserLibrariesAccess().getEndUserLibrariesKeyword_13());
    }
)
;





// Entry rule entryRuleExperimentModel
entryRuleExperimentModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExperimentModelRule()); }
	 iv_ruleExperimentModel=ruleExperimentModel 
	 { $current=$iv_ruleExperimentModel.current; } 
	 EOF 
;

// Rule ExperimentModel
ruleExperimentModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ExperimentModel' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExperimentModelAccess().getExperimentModelKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExperimentModelAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExperimentModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_2='Variables' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExperimentModelAccess().getVariablesKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentModelAccess().getExperimentVariablesExperimentVariableParserRuleCall_3_0()); 
	    }
		lv_ExperimentVariables_3_0=ruleExperimentVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentModelRule());
	        }
       		add(
       			$current, 
       			"ExperimentVariables",
        		lv_ExperimentVariables_3_0, 
        		"datasemModeller.Dmodel.ExperimentVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='end Variables' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExperimentModelAccess().getEndVariablesKeyword_4());
    }
	otherlv_5='OrganizationalModel' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExperimentModelAccess().getOrganizationalModelKeyword_5());
    }
	otherlv_6='ServiceProviders' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExperimentModelAccess().getServiceProvidersKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentModelAccess().getServiceProvidersServiceProviderParserRuleCall_7_0()); 
	    }
		lv_ServiceProviders_7_0=ruleServiceProvider		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentModelRule());
	        }
       		add(
       			$current, 
       			"ServiceProviders",
        		lv_ServiceProviders_7_0, 
        		"datasemModeller.Dmodel.ServiceProvider");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_8='end ServiceProviders' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getExperimentModelAccess().getEndServiceProvidersKeyword_8());
    }
	otherlv_9='end OrganizationalModel' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getExperimentModelAccess().getEndOrganizationalModelKeyword_9());
    }
	otherlv_10='WorkItemNetworkModel' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getExperimentModelAccess().getWorkItemNetworkModelKeyword_10());
    }
	otherlv_11='WorkItemNetworks' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getExperimentModelAccess().getWorkItemNetworksKeyword_11());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentModelAccess().getWorkItemNetworksWorkItemNetworkParserRuleCall_12_0()); 
	    }
		lv_WorkItemNetworks_12_0=ruleWorkItemNetwork		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentModelRule());
	        }
       		add(
       			$current, 
       			"WorkItemNetworks",
        		lv_WorkItemNetworks_12_0, 
        		"datasemModeller.Dmodel.WorkItemNetwork");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_13='end WorkItemNetworks' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getExperimentModelAccess().getEndWorkItemNetworksKeyword_13());
    }
	otherlv_14='end WorkItemNetworkModel' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getExperimentModelAccess().getEndWorkItemNetworkModelKeyword_14());
    }
	otherlv_15='ExperimentSettings' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getExperimentModelAccess().getExperimentSettingsKeyword_15());
    }
	otherlv_16='WINReplications' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getExperimentModelAccess().getWINReplicationsKeyword_16());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentModelAccess().getWINReplicationsWINReplicationParserRuleCall_17_0()); 
	    }
		lv_WINReplications_17_0=ruleWINReplication		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentModelRule());
	        }
       		add(
       			$current, 
       			"WINReplications",
        		lv_WINReplications_17_0, 
        		"datasemModeller.Dmodel.WINReplication");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_18='end WINReplications' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getExperimentModelAccess().getEndWINReplicationsKeyword_18());
    }
	otherlv_19='ExperimentParameters' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getExperimentModelAccess().getExperimentParametersKeyword_19());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentModelAccess().getExperimentParametersMechanismParserRuleCall_20_0()); 
	    }
		lv_ExperimentParameters_20_0=ruleMechanism		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentModelRule());
	        }
       		set(
       			$current, 
       			"ExperimentParameters",
        		lv_ExperimentParameters_20_0, 
        		"datasemModeller.Dmodel.Mechanism");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_21='end ExperimentParameters' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getExperimentModelAccess().getEndExperimentParametersKeyword_21());
    }
	otherlv_22='end ExperimentSettings' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getExperimentModelAccess().getEndExperimentSettingsKeyword_22());
    }
	otherlv_23='end ExperimentModel' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getExperimentModelAccess().getEndExperimentModelKeyword_23());
    }
)
;





// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberRule()); } 
	 iv_ruleNumber=ruleNumber 
	 { $current=$iv_ruleNumber.current.getText(); }  
	 EOF 
;

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getNumberAccess().getINTTerminalRuleCall_0()); 
    }

    |    this_DOUBLE_1=RULE_DOUBLE    {
		$current.merge(this_DOUBLE_1);
    }

    { 
    newLeafNode(this_DOUBLE_1, grammarAccess.getNumberAccess().getDOUBLETerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleParameter
entryRuleParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); } 
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current.getText(); }  
	 EOF 
;

// Rule Parameter
ruleParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getParameterAccess().getNumberParserRuleCall_0()); 
    }
    this_Number_0=ruleNumber    {
		$current.merge(this_Number_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_STRING_1=RULE_STRING    {
		$current.merge(this_STRING_1);
    }

    { 
    newLeafNode(this_STRING_1, grammarAccess.getParameterAccess().getSTRINGTerminalRuleCall_1()); 
    }

    |    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getParameterAccess().getIDTerminalRuleCall_2()); 
    }

    |    this_BOOLEAN_3=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_3);
    }

    { 
    newLeafNode(this_BOOLEAN_3, grammarAccess.getParameterAccess().getBOOLEANTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleAbstractParameter
entryRuleAbstractParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractParameterRule()); }
	 iv_ruleAbstractParameter=ruleAbstractParameter 
	 { $current=$iv_ruleAbstractParameter.current; } 
	 EOF 
;

// Rule AbstractParameter
ruleAbstractParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_isVariable_0_0=	'var:' 
    {
        newLeafNode(lv_isVariable_0_0, grammarAccess.getAbstractParameterAccess().getIsVariableVarKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAbstractParameterRule());
	        }
       		setWithLastConsumed($current, "isVariable", true, "var:");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAbstractParameterRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getAbstractParameterAccess().getVariableExperimentVariableCrossReference_0_1_0()); 
	}

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractParameterAccess().getValueParameterParserRuleCall_1_0()); 
	    }
		lv_value_2_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractParameterRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"datasemModeller.Dmodel.Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNumExpression
entryRuleNumExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumExpressionRule()); }
	 iv_ruleNumExpression=ruleNumExpression 
	 { $current=$iv_ruleNumExpression.current; } 
	 EOF 
;

// Rule NumExpression
ruleNumExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getNumExpressionAccess().getNumValueNumberParserRuleCall_0_0()); 
	    }
		lv_numValue_0_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumExpressionRule());
	        }
       		set(
       			$current, 
       			"numValue",
        		lv_numValue_0_0, 
        		"datasemModeller.Dmodel.Number");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		lv_distribution_1_0=	'Random.' 
    {
        newLeafNode(lv_distribution_1_0, grammarAccess.getNumExpressionAccess().getDistributionRandomKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumExpressionRule());
	        }
       		setWithLastConsumed($current, "distribution", true, "Random.");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNumExpressionAccess().getNumDistDistributionParserRuleCall_1_1_0()); 
	    }
		lv_numDist_2_0=ruleDistribution		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumExpressionRule());
	        }
       		set(
       			$current, 
       			"numDist",
        		lv_numDist_2_0, 
        		"datasemModeller.Dmodel.Distribution");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleDistribution
entryRuleDistribution returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDistributionRule()); }
	 iv_ruleDistribution=ruleDistribution 
	 { $current=$iv_ruleDistribution.current; } 
	 EOF 
;

// Rule Distribution
ruleDistribution returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_isNormal_0_0=	'Normal' 
    {
        newLeafNode(lv_isNormal_0_0, grammarAccess.getDistributionAccess().getIsNormalNormalKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDistributionRule());
	        }
       		setWithLastConsumed($current, "isNormal", true, "Normal");
	    }

)
)
    |(
(
		lv_isUniform_1_0=	'Uniform' 
    {
        newLeafNode(lv_isUniform_1_0, grammarAccess.getDistributionAccess().getIsUniformUniformKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDistributionRule());
	        }
       		setWithLastConsumed($current, "isUniform", true, "Uniform");
	    }

)
)
    |(
(
		lv_isExponential_2_0=	'Exponential' 
    {
        newLeafNode(lv_isExponential_2_0, grammarAccess.getDistributionAccess().getIsExponentialExponentialKeyword_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDistributionRule());
	        }
       		setWithLastConsumed($current, "isExponential", true, "Exponential");
	    }

)
))	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDistributionAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDistributionAccess().getParametersParameterParserRuleCall_2_0()); 
	    }
		lv_parameters_4_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDistributionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_4_0, 
        		"datasemModeller.Dmodel.Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDistributionAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDistributionAccess().getParametersParameterParserRuleCall_3_1_0()); 
	    }
		lv_parameters_6_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDistributionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_6_0, 
        		"datasemModeller.Dmodel.Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDistributionAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleGovernanceStrategy
entryRuleGovernanceStrategy returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGovernanceStrategyRule()); }
	 iv_ruleGovernanceStrategy=ruleGovernanceStrategy 
	 { $current=$iv_ruleGovernanceStrategy.current; } 
	 EOF 
;

// Rule GovernanceStrategy
ruleGovernanceStrategy returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getGovernanceStrategyAccess().getNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGovernanceStrategyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_1='type' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGovernanceStrategyAccess().getTypeKeyword_0_1_0());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGovernanceStrategyAccess().getColonKeyword_0_1_1());
    }
(((
(
		lv_pull_3_0=	'pull' 
    {
        newLeafNode(lv_pull_3_0, grammarAccess.getGovernanceStrategyAccess().getPullPullKeyword_0_1_2_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGovernanceStrategyRule());
	        }
       		setWithLastConsumed($current, "pull", true, "pull");
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGovernanceStrategyAccess().getLeftCurlyBracketKeyword_0_1_2_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGovernanceStrategyAccess().getPullStrategyPullStrategyParserRuleCall_0_1_2_0_2_0()); 
	    }
		lv_pullStrategy_5_0=rulePullStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGovernanceStrategyRule());
	        }
       		set(
       			$current, 
       			"pullStrategy",
        		lv_pullStrategy_5_0, 
        		"datasemModeller.Dmodel.PullStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGovernanceStrategyAccess().getRightCurlyBracketKeyword_0_1_2_0_3());
    }
)
    |((
(
		lv_push_7_0=	'push' 
    {
        newLeafNode(lv_push_7_0, grammarAccess.getGovernanceStrategyAccess().getPushPushKeyword_0_1_2_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGovernanceStrategyRule());
	        }
       		setWithLastConsumed($current, "push", true, "push");
	    }

)
)	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getGovernanceStrategyAccess().getLeftCurlyBracketKeyword_0_1_2_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGovernanceStrategyAccess().getPushStrategyPushStrategyParserRuleCall_0_1_2_1_2_0()); 
	    }
		lv_pushStrategy_9_0=rulePushStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGovernanceStrategyRule());
	        }
       		set(
       			$current, 
       			"pushStrategy",
        		lv_pushStrategy_9_0, 
        		"datasemModeller.Dmodel.PushStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getGovernanceStrategyAccess().getRightCurlyBracketKeyword_0_1_2_1_3());
    }
))))
    |(	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getGovernanceStrategyAccess().getLeftCurlyBracketKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGovernanceStrategyAccess().getPushStrategyPushStrategyParserRuleCall_1_1_0()); 
	    }
		lv_pushStrategy_12_0=rulePushStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGovernanceStrategyRule());
	        }
       		set(
       			$current, 
       			"pushStrategy",
        		lv_pushStrategy_12_0, 
        		"datasemModeller.Dmodel.PushStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getGovernanceStrategyAccess().getRightCurlyBracketKeyword_1_2());
    }
))
;





// Entry rule entryRulePullStrategy
entryRulePullStrategy returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPullStrategyRule()); }
	 iv_rulePullStrategy=rulePullStrategy 
	 { $current=$iv_rulePullStrategy.current; } 
	 EOF 
;

// Rule PullStrategy
rulePullStrategy returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='mechanisms' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPullStrategyAccess().getMechanismsKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPullStrategyAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPullStrategyAccess().getMechanismsMechanismParserRuleCall_2_0()); 
	    }
		lv_mechanisms_2_0=ruleMechanism		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPullStrategyRule());
	        }
       		add(
       			$current, 
       			"mechanisms",
        		lv_mechanisms_2_0, 
        		"datasemModeller.Dmodel.Mechanism");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPullStrategyAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRulePushStrategy
entryRulePushStrategy returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPushStrategyRule()); }
	 iv_rulePushStrategy=rulePushStrategy 
	 { $current=$iv_rulePushStrategy.current; } 
	 EOF 
;

// Rule PushStrategy
rulePushStrategy returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='mechanisms' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPushStrategyAccess().getMechanismsKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPushStrategyAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPushStrategyAccess().getMechanismsMechanismParserRuleCall_2_0()); 
	    }
		lv_mechanisms_2_0=ruleMechanism		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPushStrategyRule());
	        }
       		add(
       			$current, 
       			"mechanisms",
        		lv_mechanisms_2_0, 
        		"datasemModeller.Dmodel.Mechanism");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPushStrategyAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleMechanism
entryRuleMechanism returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMechanismRule()); }
	 iv_ruleMechanism=ruleMechanism 
	 { $current=$iv_ruleMechanism.current; } 
	 EOF 
;

// Rule Mechanism
ruleMechanism returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getMechanismAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMechanismRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMechanismAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMechanismAccess().getValueParameterParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMechanismRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"datasemModeller.Dmodel.Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMechanismAccess().getLeftCurlyBracketKeyword_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMechanismAccess().getAttributesMechanismAttributeParserRuleCall_3_1_0_0()); 
	    }
		lv_attributes_4_0=ruleMechanismAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMechanismRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_4_0, 
        		"datasemModeller.Dmodel.MechanismAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMechanismAccess().getCommaKeyword_3_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMechanismAccess().getAttributesMechanismAttributeParserRuleCall_3_1_1_1_0()); 
	    }
		lv_attributes_6_0=ruleMechanismAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMechanismRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_6_0, 
        		"datasemModeller.Dmodel.MechanismAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMechanismAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleMechanismAttribute
entryRuleMechanismAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMechanismAttributeRule()); }
	 iv_ruleMechanismAttribute=ruleMechanismAttribute 
	 { $current=$iv_ruleMechanismAttribute.current; } 
	 EOF 
;

// Rule MechanismAttribute
ruleMechanismAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getMechanismAttributeAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMechanismAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMechanismAttributeAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMechanismAttributeAccess().getValueParameterParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMechanismAttributeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"datasemModeller.Dmodel.Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleWorkItemType
entryRuleWorkItemType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorkItemTypeRule()); }
	 iv_ruleWorkItemType=ruleWorkItemType 
	 { $current=$iv_ruleWorkItemType.current; } 
	 EOF 
;

// Rule WorkItemType
ruleWorkItemType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getWorkItemTypeAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWorkItemTypeAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='hierarchy' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWorkItemTypeAccess().getHierarchyKeyword_2_0());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWorkItemTypeAccess().getEqualsSignKeyword_2_1());
    }
(
(
		lv_hierarchy_4_0=RULE_INT
		{
			newLeafNode(lv_hierarchy_4_0, grammarAccess.getWorkItemTypeAccess().getHierarchyINTTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"hierarchy",
        		lv_hierarchy_4_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkItemTypeAccess().getMechanismsMechanismParserRuleCall_3_0()); 
	    }
		lv_Mechanisms_5_0=ruleMechanism		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkItemTypeRule());
	        }
       		add(
       			$current, 
       			"Mechanisms",
        		lv_Mechanisms_5_0, 
        		"datasemModeller.Dmodel.Mechanism");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getWorkItemTypeAccess().getRightCurlyBracketKeyword_4());
    }
(
(
		lv_id_7_0=RULE_INT
		{
			newLeafNode(lv_id_7_0, grammarAccess.getWorkItemTypeAccess().getIdINTTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_7_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)?)
;





// Entry rule entryRuleWorkItemNetwork
entryRuleWorkItemNetwork returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorkItemNetworkRule()); }
	 iv_ruleWorkItemNetwork=ruleWorkItemNetwork 
	 { $current=$iv_ruleWorkItemNetwork.current; } 
	 EOF 
;

// Rule WorkItemNetwork
ruleWorkItemNetwork returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='WorkItemNetwork' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWorkItemNetworkAccess().getWorkItemNetworkKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getWorkItemNetworkAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemNetworkRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWorkItemNetworkAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='WorkItems' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWorkItemNetworkAccess().getWorkItemsKeyword_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWorkItemNetworkAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkItemNetworkAccess().getWorkItemsWorkItemParserRuleCall_5_0()); 
	    }
		lv_workItems_5_0=ruleWorkItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkItemNetworkRule());
	        }
       		add(
       			$current, 
       			"workItems",
        		lv_workItems_5_0, 
        		"datasemModeller.Dmodel.WorkItem");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getWorkItemNetworkAccess().getRightCurlyBracketKeyword_6());
    }
	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getWorkItemNetworkAccess().getRightCurlyBracketKeyword_7());
    }
(
(
		lv_id_8_0=RULE_INT
		{
			newLeafNode(lv_id_8_0, grammarAccess.getWorkItemNetworkAccess().getIdINTTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemNetworkRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_8_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)?)
;





// Entry rule entryRuleWorkItem
entryRuleWorkItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorkItemRule()); }
	 iv_ruleWorkItem=ruleWorkItem 
	 { $current=$iv_ruleWorkItem.current; } 
	 EOF 
;

// Rule WorkItem
ruleWorkItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getWorkItemAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_1='type' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWorkItemAccess().getTypeKeyword_1_0());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWorkItemAccess().getColonKeyword_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getWorkItemAccess().getTypeWorkItemTypeCrossReference_1_2_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWorkItemAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		lv_hasPredecessors_5_0=	'prerequisites' 
    {
        newLeafNode(lv_hasPredecessors_5_0, grammarAccess.getWorkItemAccess().getHasPredecessorsPrerequisitesKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemRule());
	        }
       		setWithLastConsumed($current, "hasPredecessors", true, "prerequisites");
	    }

)
)	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getWorkItemAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getWorkItemAccess().getPTasksWorkItemCrossReference_3_2_0()); 
	}

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getWorkItemAccess().getCommaKeyword_3_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemRule());
	        }
        }
	otherlv_9=RULE_ID
	{
		newLeafNode(otherlv_9, grammarAccess.getWorkItemAccess().getPTasksWorkItemCrossReference_3_3_1_0()); 
	}

)
))*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getWorkItemAccess().getRightCurlyBracketKeyword_3_4());
    }
)?(((
(
		lv_hasSubtasks_11_0=	'decomposesTo' 
    {
        newLeafNode(lv_hasSubtasks_11_0, grammarAccess.getWorkItemAccess().getHasSubtasksDecomposesToKeyword_4_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemRule());
	        }
       		setWithLastConsumed($current, "hasSubtasks", true, "decomposesTo");
	    }

)
)	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getWorkItemAccess().getLeftCurlyBracketKeyword_4_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemRule());
	        }
        }
	otherlv_13=RULE_ID
	{
		newLeafNode(otherlv_13, grammarAccess.getWorkItemAccess().getSTasksWorkItemCrossReference_4_0_2_0()); 
	}

)
)(	otherlv_14=',' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getWorkItemAccess().getCommaKeyword_4_0_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemRule());
	        }
        }
	otherlv_15=RULE_ID
	{
		newLeafNode(otherlv_15, grammarAccess.getWorkItemAccess().getSTasksWorkItemCrossReference_4_0_3_1_0()); 
	}

)
))*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getWorkItemAccess().getRightCurlyBracketKeyword_4_0_4());
    }
(	otherlv_17='analysisPhases' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getWorkItemAccess().getAnalysisPhasesKeyword_4_0_5_0());
    }
	otherlv_18='{' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getWorkItemAccess().getLeftCurlyBracketKeyword_4_0_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkItemAccess().getRequiredAnalysisRequiredServiceParserRuleCall_4_0_5_2_0()); 
	    }
		lv_requiredAnalysis_19_0=ruleRequiredService		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkItemRule());
	        }
       		add(
       			$current, 
       			"requiredAnalysis",
        		lv_requiredAnalysis_19_0, 
        		"datasemModeller.Dmodel.RequiredService");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_20=',' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getWorkItemAccess().getCommaKeyword_4_0_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkItemAccess().getRequiredAnalysisRequiredServiceParserRuleCall_4_0_5_3_1_0()); 
	    }
		lv_requiredAnalysis_21_0=ruleRequiredService		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkItemRule());
	        }
       		add(
       			$current, 
       			"requiredAnalysis",
        		lv_requiredAnalysis_21_0, 
        		"datasemModeller.Dmodel.RequiredService");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getWorkItemAccess().getRightCurlyBracketKeyword_4_0_5_4());
    }
)?)?
    |((	otherlv_23='analysisPhases' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getWorkItemAccess().getAnalysisPhasesKeyword_4_1_0_0());
    }
	otherlv_24='{' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getWorkItemAccess().getLeftCurlyBracketKeyword_4_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkItemAccess().getRequiredAnalysisRequiredServiceParserRuleCall_4_1_0_2_0()); 
	    }
		lv_requiredAnalysis_25_0=ruleRequiredService		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkItemRule());
	        }
       		add(
       			$current, 
       			"requiredAnalysis",
        		lv_requiredAnalysis_25_0, 
        		"datasemModeller.Dmodel.RequiredService");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_26=',' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getWorkItemAccess().getCommaKeyword_4_1_0_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkItemAccess().getRequiredAnalysisRequiredServiceParserRuleCall_4_1_0_3_1_0()); 
	    }
		lv_requiredAnalysis_27_0=ruleRequiredService		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkItemRule());
	        }
       		add(
       			$current, 
       			"requiredAnalysis",
        		lv_requiredAnalysis_27_0, 
        		"datasemModeller.Dmodel.RequiredService");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_28='}' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getWorkItemAccess().getRightCurlyBracketKeyword_4_1_0_4());
    }
)?	otherlv_29='efforts' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getWorkItemAccess().getEffortsKeyword_4_1_1());
    }
	otherlv_30='{' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getWorkItemAccess().getLeftCurlyBracketKeyword_4_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkItemAccess().getRequiredServicesRequiredServiceParserRuleCall_4_1_3_0()); 
	    }
		lv_requiredServices_31_0=ruleRequiredService		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkItemRule());
	        }
       		add(
       			$current, 
       			"requiredServices",
        		lv_requiredServices_31_0, 
        		"datasemModeller.Dmodel.RequiredService");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_32=',' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getWorkItemAccess().getCommaKeyword_4_1_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkItemAccess().getRequiredServicesRequiredServiceParserRuleCall_4_1_4_1_0()); 
	    }
		lv_requiredServices_33_0=ruleRequiredService		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkItemRule());
	        }
       		add(
       			$current, 
       			"requiredServices",
        		lv_requiredServices_33_0, 
        		"datasemModeller.Dmodel.RequiredService");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_34='}' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getWorkItemAccess().getRightCurlyBracketKeyword_4_1_5());
    }
))((
(
		lv_hasImpacts_35_0=	'impacts' 
    {
        newLeafNode(lv_hasImpacts_35_0, grammarAccess.getWorkItemAccess().getHasImpactsImpactsKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemRule());
	        }
       		setWithLastConsumed($current, "hasImpacts", true, "impacts");
	    }

)
)	otherlv_36='{' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getWorkItemAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkItemAccess().getImpactsImpactParserRuleCall_5_2_0()); 
	    }
		lv_impacts_37_0=ruleImpact		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkItemRule());
	        }
       		add(
       			$current, 
       			"impacts",
        		lv_impacts_37_0, 
        		"datasemModeller.Dmodel.Impact");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_38=',' 
    {
    	newLeafNode(otherlv_38, grammarAccess.getWorkItemAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkItemAccess().getImpactsImpactParserRuleCall_5_3_1_0()); 
	    }
		lv_impacts_39_0=ruleImpact		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkItemRule());
	        }
       		add(
       			$current, 
       			"impacts",
        		lv_impacts_39_0, 
        		"datasemModeller.Dmodel.Impact");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_40='}' 
    {
    	newLeafNode(otherlv_40, grammarAccess.getWorkItemAccess().getRightCurlyBracketKeyword_5_4());
    }
)?(	otherlv_41='value' 
    {
    	newLeafNode(otherlv_41, grammarAccess.getWorkItemAccess().getValueKeyword_6_0());
    }
	otherlv_42='=' 
    {
    	newLeafNode(otherlv_42, grammarAccess.getWorkItemAccess().getEqualsSignKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkItemAccess().getValueNumExpressionParserRuleCall_6_2_0()); 
	    }
		lv_value_43_0=ruleNumExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkItemRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_43_0, 
        		"datasemModeller.Dmodel.NumExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_44='arrival' 
    {
    	newLeafNode(otherlv_44, grammarAccess.getWorkItemAccess().getArrivalKeyword_7_0());
    }
	otherlv_45='=' 
    {
    	newLeafNode(otherlv_45, grammarAccess.getWorkItemAccess().getEqualsSignKeyword_7_1());
    }
(
(
		lv_arrivalTime_46_0=RULE_INT
		{
			newLeafNode(lv_arrivalTime_46_0, grammarAccess.getWorkItemAccess().getArrivalTimeINTTerminalRuleCall_7_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"arrivalTime",
        		lv_arrivalTime_46_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
))?(	otherlv_47='duration' 
    {
    	newLeafNode(otherlv_47, grammarAccess.getWorkItemAccess().getDurationKeyword_8_0());
    }
	otherlv_48='=' 
    {
    	newLeafNode(otherlv_48, grammarAccess.getWorkItemAccess().getEqualsSignKeyword_8_1());
    }
(
(
		lv_duration_49_0=RULE_INT
		{
			newLeafNode(lv_duration_49_0, grammarAccess.getWorkItemAccess().getDurationINTTerminalRuleCall_8_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"duration",
        		lv_duration_49_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
))?	otherlv_50='}' 
    {
    	newLeafNode(otherlv_50, grammarAccess.getWorkItemAccess().getRightCurlyBracketKeyword_9());
    }
(
(
		lv_id_51_0=RULE_INT
		{
			newLeafNode(lv_id_51_0, grammarAccess.getWorkItemAccess().getIdINTTerminalRuleCall_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_51_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)?)
;





// Entry rule entryRuleRequiredService
entryRuleRequiredService returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequiredServiceRule()); }
	 iv_ruleRequiredService=ruleRequiredService 
	 { $current=$iv_ruleRequiredService.current; } 
	 EOF 
;

// Rule RequiredService
ruleRequiredService returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRequiredServiceAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequiredServiceRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRequiredServiceAccess().getServiceTypeServiceCrossReference_1_0()); 
	}

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRequiredServiceAccess().getCommaKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequiredServiceAccess().getEffortsAbstractParameterParserRuleCall_3_0()); 
	    }
		lv_efforts_3_0=ruleAbstractParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequiredServiceRule());
	        }
       		set(
       			$current, 
       			"efforts",
        		lv_efforts_3_0, 
        		"datasemModeller.Dmodel.AbstractParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRequiredServiceAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleImpact
entryRuleImpact returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImpactRule()); }
	 iv_ruleImpact=ruleImpact 
	 { $current=$iv_ruleImpact.current; } 
	 EOF 
;

// Rule Impact
ruleImpact returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getImpactRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getImpactAccess().getImpactWIWorkItemCrossReference_0_0()); 
	}

)
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getImpactAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImpactAccess().getLikelihoodAbstractParameterParserRuleCall_2_0()); 
	    }
		lv_likelihood_2_0=ruleAbstractParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImpactRule());
	        }
       		set(
       			$current, 
       			"likelihood",
        		lv_likelihood_2_0, 
        		"datasemModeller.Dmodel.AbstractParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getImpactAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImpactAccess().getRiskAbstractParameterParserRuleCall_4_0()); 
	    }
		lv_risk_4_0=ruleAbstractParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImpactRule());
	        }
       		set(
       			$current, 
       			"risk",
        		lv_risk_4_0, 
        		"datasemModeller.Dmodel.AbstractParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getImpactAccess().getRightSquareBracketKeyword_5());
    }
)
;





// Entry rule entryRuleServiceProviderType
entryRuleServiceProviderType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceProviderTypeRule()); }
	 iv_ruleServiceProviderType=ruleServiceProviderType 
	 { $current=$iv_ruleServiceProviderType.current; } 
	 EOF 
;

// Rule ServiceProviderType
ruleServiceProviderType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_id_0_0=RULE_INT
		{
			newLeafNode(lv_id_0_0, grammarAccess.getServiceProviderTypeAccess().getIdINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceProviderTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_0_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)?(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getServiceProviderTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceProviderTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getServiceProviderTypeAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='hierarchy' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getServiceProviderTypeAccess().getHierarchyKeyword_3_0());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getServiceProviderTypeAccess().getEqualsSignKeyword_3_1());
    }
(
(
		lv_hierarchy_5_0=RULE_INT
		{
			newLeafNode(lv_hierarchy_5_0, grammarAccess.getServiceProviderTypeAccess().getHierarchyINTTerminalRuleCall_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceProviderTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"hierarchy",
        		lv_hierarchy_5_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getServiceProviderTypeAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleService
entryRuleService returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	 iv_ruleService=ruleService 
	 { $current=$iv_ruleService.current; } 
	 EOF 
;

// Rule Service
ruleService returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_1_0());
    }
(	otherlv_2='hierarchy' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getServiceAccess().getHierarchyKeyword_1_1_0());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getServiceAccess().getEqualsSignKeyword_1_1_1());
    }
(
(
		lv_hierarchy_4_0=RULE_INT
		{
			newLeafNode(lv_hierarchy_4_0, grammarAccess.getServiceAccess().getHierarchyINTTerminalRuleCall_1_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"hierarchy",
        		lv_hierarchy_4_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
))?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_1_2());
    }
)?(
(
		lv_id_6_0=RULE_INT
		{
			newLeafNode(lv_id_6_0, grammarAccess.getServiceAccess().getIdINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_6_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)?)
;





// Entry rule entryRuleServiceProvider
entryRuleServiceProvider returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceProviderRule()); }
	 iv_ruleServiceProvider=ruleServiceProvider 
	 { $current=$iv_ruleServiceProvider.current; } 
	 EOF 
;

// Rule ServiceProvider
ruleServiceProvider returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getServiceProviderAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceProviderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_1='type' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getServiceProviderAccess().getTypeKeyword_1_0());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getServiceProviderAccess().getColonKeyword_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceProviderRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getServiceProviderAccess().getTypeServiceProviderTypeCrossReference_1_2_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getServiceProviderAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_5='assignTo' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getServiceProviderAccess().getAssignToKeyword_3_0());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getServiceProviderAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceProviderRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getServiceProviderAccess().getAssignToServiceProviderCrossReference_3_2_0()); 
	}

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getServiceProviderAccess().getCommaKeyword_3_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceProviderRule());
	        }
        }
	otherlv_9=RULE_ID
	{
		newLeafNode(otherlv_9, grammarAccess.getServiceProviderAccess().getAssignToServiceProviderCrossReference_3_3_1_0()); 
	}

)
))*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getServiceProviderAccess().getRightCurlyBracketKeyword_3_4());
    }
)?(	otherlv_11='strategy' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getServiceProviderAccess().getStrategyKeyword_4_0());
    }
	otherlv_12=':' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getServiceProviderAccess().getColonKeyword_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceProviderRule());
	        }
        }
	otherlv_13=RULE_ID
	{
		newLeafNode(otherlv_13, grammarAccess.getServiceProviderAccess().getGovernanceStrategyGovernanceStrategyCrossReference_4_2_0()); 
	}

)
))?(	otherlv_14='{' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getServiceProviderAccess().getLeftCurlyBracketKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceProviderAccess().getStrategySpecsMechanismAttributeParserRuleCall_5_1_0()); 
	    }
		lv_strategySpecs_15_0=ruleMechanismAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceProviderRule());
	        }
       		add(
       			$current, 
       			"strategySpecs",
        		lv_strategySpecs_15_0, 
        		"datasemModeller.Dmodel.MechanismAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getServiceProviderAccess().getCommaKeyword_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceProviderAccess().getStrategySpecsMechanismAttributeParserRuleCall_5_2_1_0()); 
	    }
		lv_strategySpecs_17_0=ruleMechanismAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceProviderRule());
	        }
       		add(
       			$current, 
       			"strategySpecs",
        		lv_strategySpecs_17_0, 
        		"datasemModeller.Dmodel.MechanismAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getServiceProviderAccess().getRightCurlyBracketKeyword_5_3());
    }
)?(	otherlv_19='resources' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getServiceProviderAccess().getResourcesKeyword_6_0());
    }
	otherlv_20=':' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getServiceProviderAccess().getColonKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceProviderAccess().getResourcesAssetParserRuleCall_6_2_0()); 
	    }
		lv_resources_21_0=ruleAsset		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceProviderRule());
	        }
       		add(
       			$current, 
       			"resources",
        		lv_resources_21_0, 
        		"datasemModeller.Dmodel.Asset");
	        afterParserOrEnumRuleCall();
	    }

)
)+)?	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getServiceProviderAccess().getRightCurlyBracketKeyword_7());
    }
(
(
		lv_id_23_0=RULE_INT
		{
			newLeafNode(lv_id_23_0, grammarAccess.getServiceProviderAccess().getIdINTTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceProviderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_23_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)?)
;





// Entry rule entryRuleAsset
entryRuleAsset returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssetRule()); }
	 iv_ruleAsset=ruleAsset 
	 { $current=$iv_ruleAsset.current; } 
	 EOF 
;

// Rule Asset
ruleAsset returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getAssetAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_1='*' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAssetAccess().getAsteriskKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssetAccess().getNumberAbstractParameterParserRuleCall_2_0()); 
	    }
		lv_number_2_0=ruleAbstractParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssetRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_2_0, 
        		"datasemModeller.Dmodel.AbstractParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAssetAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='skills' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAssetAccess().getSkillsKeyword_4_0());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAssetAccess().getColonKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssetAccess().getSkillSetSkillParserRuleCall_4_2_0()); 
	    }
		lv_skillSet_6_0=ruleSkill		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssetRule());
	        }
       		add(
       			$current, 
       			"skillSet",
        		lv_skillSet_6_0, 
        		"datasemModeller.Dmodel.Skill");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAssetAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssetAccess().getSkillSetSkillParserRuleCall_4_3_1_0()); 
	    }
		lv_skillSet_8_0=ruleSkill		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssetRule());
	        }
       		add(
       			$current, 
       			"skillSet",
        		lv_skillSet_8_0, 
        		"datasemModeller.Dmodel.Skill");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAssetAccess().getRightCurlyBracketKeyword_5());
    }
(
(
		lv_id_10_0=RULE_INT
		{
			newLeafNode(lv_id_10_0, grammarAccess.getAssetAccess().getIdINTTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_10_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)?)
;





// Entry rule entryRuleSkill
entryRuleSkill returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSkillRule()); }
	 iv_ruleSkill=ruleSkill 
	 { $current=$iv_ruleSkill.current; } 
	 EOF 
;

// Rule Skill
ruleSkill returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSkillAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSkillRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getSkillAccess().getServiceServiceCrossReference_1_0()); 
	}

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSkillAccess().getCommaKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSkillAccess().getEfficiencyAbstractParameterParserRuleCall_3_0()); 
	    }
		lv_efficiency_3_0=ruleAbstractParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSkillRule());
	        }
       		set(
       			$current, 
       			"efficiency",
        		lv_efficiency_3_0, 
        		"datasemModeller.Dmodel.AbstractParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSkillAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleExperimentVariable
entryRuleExperimentVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExperimentVariableRule()); }
	 iv_ruleExperimentVariable=ruleExperimentVariable 
	 { $current=$iv_ruleExperimentVariable.current; } 
	 EOF 
;

// Rule ExperimentVariable
ruleExperimentVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getExperimentVariableAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExperimentVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExperimentVariableAccess().getColonKeyword_1());
    }
(((
(
		lv_boolean_2_0=	'boolean' 
    {
        newLeafNode(lv_boolean_2_0, grammarAccess.getExperimentVariableAccess().getBooleanBooleanKeyword_2_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExperimentVariableRule());
	        }
       		setWithLastConsumed($current, "boolean", true, "boolean");
	    }

)
)(
(
		lv_booleanValue_3_0=RULE_BOOLEAN
		{
			newLeafNode(lv_booleanValue_3_0, grammarAccess.getExperimentVariableAccess().getBooleanValueBOOLEANTerminalRuleCall_2_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExperimentVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"booleanValue",
        		lv_booleanValue_3_0, 
        		"datasemModeller.Dmodel.BOOLEAN");
	    }

)
))
    |((
(
		lv_num_4_0=	'num' 
    {
        newLeafNode(lv_num_4_0, grammarAccess.getExperimentVariableAccess().getNumNumKeyword_2_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExperimentVariableRule());
	        }
       		setWithLastConsumed($current, "num", true, "num");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentVariableAccess().getNumValueNumberParserRuleCall_2_1_1_0()); 
	    }
		lv_numValue_5_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentVariableRule());
	        }
       		set(
       			$current, 
       			"numValue",
        		lv_numValue_5_0, 
        		"datasemModeller.Dmodel.Number");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_distribution_6_0=	'Random.' 
    {
        newLeafNode(lv_distribution_6_0, grammarAccess.getExperimentVariableAccess().getDistributionRandomKeyword_2_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExperimentVariableRule());
	        }
       		setWithLastConsumed($current, "distribution", true, "Random.");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentVariableAccess().getNumDistDistributionParserRuleCall_2_2_1_0()); 
	    }
		lv_numDist_7_0=ruleDistribution		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentVariableRule());
	        }
       		set(
       			$current, 
       			"numDist",
        		lv_numDist_7_0, 
        		"datasemModeller.Dmodel.Distribution");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_string_8_0=	'string' 
    {
        newLeafNode(lv_string_8_0, grammarAccess.getExperimentVariableAccess().getStringStringKeyword_2_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExperimentVariableRule());
	        }
       		setWithLastConsumed($current, "string", true, "string");
	    }

)
)(
(
		lv_stringValue_9_0=RULE_STRING
		{
			newLeafNode(lv_stringValue_9_0, grammarAccess.getExperimentVariableAccess().getStringValueSTRINGTerminalRuleCall_2_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExperimentVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"stringValue",
        		lv_stringValue_9_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))
    |((
(
		lv_strategy_10_0=	'GovernanceStrategy' 
    {
        newLeafNode(lv_strategy_10_0, grammarAccess.getExperimentVariableAccess().getStrategyGovernanceStrategyKeyword_2_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExperimentVariableRule());
	        }
       		setWithLastConsumed($current, "strategy", true, "GovernanceStrategy");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExperimentVariableAccess().getStrategyValueGovernanceStrategyParserRuleCall_2_4_1_0()); 
	    }
		lv_strategyValue_11_0=ruleGovernanceStrategy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExperimentVariableRule());
	        }
       		set(
       			$current, 
       			"strategyValue",
        		lv_strategyValue_11_0, 
        		"datasemModeller.Dmodel.GovernanceStrategy");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleWINReplication
entryRuleWINReplication returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWINReplicationRule()); }
	 iv_ruleWINReplication=ruleWINReplication 
	 { $current=$iv_ruleWINReplication.current; } 
	 EOF 
;

// Rule WINReplication
ruleWINReplication returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='create' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWINReplicationAccess().getCreateKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWINReplicationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getWINReplicationAccess().getWorkItemNetworkWorkItemNetworkCrossReference_1_0()); 
	}

)
)	otherlv_2='*' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWINReplicationAccess().getAsteriskKeyword_2());
    }
(
(
		lv_numReplications_3_0=RULE_INT
		{
			newLeafNode(lv_numReplications_3_0, grammarAccess.getWINReplicationAccess().getNumReplicationsINTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWINReplicationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"numReplications",
        		lv_numReplications_3_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_4='at' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWINReplicationAccess().getAtKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWINReplicationRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getWINReplicationAccess().getAssignToServiceProviderCrossReference_5_0()); 
	}

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getWINReplicationAccess().getCommaKeyword_6_0());
    }
	otherlv_7='interArrival' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getWINReplicationAccess().getInterArrivalKeyword_6_1());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getWINReplicationAccess().getEqualsSignKeyword_6_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWINReplicationAccess().getInterarrivalAbstractParameterParserRuleCall_6_3_0()); 
	    }
		lv_interarrival_9_0=ruleAbstractParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWINReplicationRule());
	        }
       		set(
       			$current, 
       			"interarrival",
        		lv_interarrival_9_0, 
        		"datasemModeller.Dmodel.AbstractParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





RULE_DOUBLE : ('0'..'9')+ '.' ('0'..'9')+;

RULE_BOOLEAN : ('false'|'true');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


