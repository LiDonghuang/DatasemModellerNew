/*
 * generated by Xtext
 */
package datasemModeller.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class DmodelGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelBuilderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.ModelBuilder");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModelBuilderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cUserLibrariesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cUserLibrariesUserLibrariesParserRuleCall_2_0 = (RuleCall)cUserLibrariesAssignment_2.eContents().get(0);
		private final Assignment cExperimentModelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExperimentModelExperimentModelParserRuleCall_3_0 = (RuleCall)cExperimentModelAssignment_3.eContents().get(0);
		
		//ModelBuilder:
		//	'ModelBuilder' name=ID
		//	UserLibraries=UserLibraries
		//	ExperimentModel=ExperimentModel;
		@Override public ParserRule getRule() { return rule; }

		//'ModelBuilder' name=ID UserLibraries=UserLibraries ExperimentModel=ExperimentModel
		public Group getGroup() { return cGroup; }

		//'ModelBuilder'
		public Keyword getModelBuilderKeyword_0() { return cModelBuilderKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//UserLibraries=UserLibraries
		public Assignment getUserLibrariesAssignment_2() { return cUserLibrariesAssignment_2; }

		//UserLibraries
		public RuleCall getUserLibrariesUserLibrariesParserRuleCall_2_0() { return cUserLibrariesUserLibrariesParserRuleCall_2_0; }

		//ExperimentModel=ExperimentModel
		public Assignment getExperimentModelAssignment_3() { return cExperimentModelAssignment_3; }

		//ExperimentModel
		public RuleCall getExperimentModelExperimentModelParserRuleCall_3_0() { return cExperimentModelExperimentModelParserRuleCall_3_0; }
	}

	public class UserLibrariesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.UserLibraries");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUserLibrariesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cServiceProviderTypesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cServiceProviderTypesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cServiceProviderTypesServiceProviderTypeParserRuleCall_2_0 = (RuleCall)cServiceProviderTypesAssignment_2.eContents().get(0);
		private final Keyword cEndServiceProviderTypesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cWorkItemTypesKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cWorkItemTypesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cWorkItemTypesWorkItemTypeParserRuleCall_5_0 = (RuleCall)cWorkItemTypesAssignment_5.eContents().get(0);
		private final Keyword cEndWorkItemTypesKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cServicesKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cServicesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cServicesServiceParserRuleCall_8_0 = (RuleCall)cServicesAssignment_8.eContents().get(0);
		private final Keyword cEndServicesKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cGovernanceStrategiesKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cGovernanceStrategiesAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cGovernanceStrategiesGovernanceStrategyParserRuleCall_11_0 = (RuleCall)cGovernanceStrategiesAssignment_11.eContents().get(0);
		private final Keyword cEndGovernanceStrategiesKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cEndUserLibrariesKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//UserLibraries:
		//	'UserLibraries'
		//	'ServiceProviderTypes'
		//	ServiceProviderTypes+=ServiceProviderType+
		//	'end ServiceProviderTypes'
		//	'WorkItemTypes' WorkItemTypes+=WorkItemType+
		//	'end WorkItemTypes'
		//	'Services'
		//	Services+=Service+
		//	'end Services'
		//	'GovernanceStrategies'
		//	GovernanceStrategies+=GovernanceStrategy*
		//	'end GovernanceStrategies'
		//	'end UserLibraries';
		@Override public ParserRule getRule() { return rule; }

		//'UserLibraries' 'ServiceProviderTypes' ServiceProviderTypes+=ServiceProviderType+ 'end ServiceProviderTypes'
		//'WorkItemTypes' WorkItemTypes+=WorkItemType+ 'end WorkItemTypes' 'Services' Services+=Service+ 'end Services'
		//'GovernanceStrategies' GovernanceStrategies+=GovernanceStrategy* 'end GovernanceStrategies' 'end UserLibraries'
		public Group getGroup() { return cGroup; }

		//'UserLibraries'
		public Keyword getUserLibrariesKeyword_0() { return cUserLibrariesKeyword_0; }

		//'ServiceProviderTypes'
		public Keyword getServiceProviderTypesKeyword_1() { return cServiceProviderTypesKeyword_1; }

		//ServiceProviderTypes+=ServiceProviderType+
		public Assignment getServiceProviderTypesAssignment_2() { return cServiceProviderTypesAssignment_2; }

		//ServiceProviderType
		public RuleCall getServiceProviderTypesServiceProviderTypeParserRuleCall_2_0() { return cServiceProviderTypesServiceProviderTypeParserRuleCall_2_0; }

		//'end ServiceProviderTypes'
		public Keyword getEndServiceProviderTypesKeyword_3() { return cEndServiceProviderTypesKeyword_3; }

		//'WorkItemTypes'
		public Keyword getWorkItemTypesKeyword_4() { return cWorkItemTypesKeyword_4; }

		//WorkItemTypes+=WorkItemType+
		public Assignment getWorkItemTypesAssignment_5() { return cWorkItemTypesAssignment_5; }

		//WorkItemType
		public RuleCall getWorkItemTypesWorkItemTypeParserRuleCall_5_0() { return cWorkItemTypesWorkItemTypeParserRuleCall_5_0; }

		//'end WorkItemTypes'
		public Keyword getEndWorkItemTypesKeyword_6() { return cEndWorkItemTypesKeyword_6; }

		//'Services'
		public Keyword getServicesKeyword_7() { return cServicesKeyword_7; }

		//Services+=Service+
		public Assignment getServicesAssignment_8() { return cServicesAssignment_8; }

		//Service
		public RuleCall getServicesServiceParserRuleCall_8_0() { return cServicesServiceParserRuleCall_8_0; }

		//'end Services'
		public Keyword getEndServicesKeyword_9() { return cEndServicesKeyword_9; }

		//'GovernanceStrategies'
		public Keyword getGovernanceStrategiesKeyword_10() { return cGovernanceStrategiesKeyword_10; }

		//GovernanceStrategies+=GovernanceStrategy*
		public Assignment getGovernanceStrategiesAssignment_11() { return cGovernanceStrategiesAssignment_11; }

		//GovernanceStrategy
		public RuleCall getGovernanceStrategiesGovernanceStrategyParserRuleCall_11_0() { return cGovernanceStrategiesGovernanceStrategyParserRuleCall_11_0; }

		//'end GovernanceStrategies'
		public Keyword getEndGovernanceStrategiesKeyword_12() { return cEndGovernanceStrategiesKeyword_12; }

		//'end UserLibraries'
		public Keyword getEndUserLibrariesKeyword_13() { return cEndUserLibrariesKeyword_13; }
	}

	public class ExperimentModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.ExperimentModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExperimentModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cVariablesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExperimentVariablesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExperimentVariablesExperimentVariableParserRuleCall_3_0 = (RuleCall)cExperimentVariablesAssignment_3.eContents().get(0);
		private final Keyword cEndVariablesKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cOrganizationalModelKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cServiceProvidersKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cServiceProvidersAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cServiceProvidersServiceProviderParserRuleCall_7_0 = (RuleCall)cServiceProvidersAssignment_7.eContents().get(0);
		private final Keyword cEndServiceProvidersKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cEndOrganizationalModelKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cWorkItemNetworkModelKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cWorkItemNetworksKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cWorkItemNetworksAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cWorkItemNetworksWorkItemNetworkParserRuleCall_12_0 = (RuleCall)cWorkItemNetworksAssignment_12.eContents().get(0);
		private final Keyword cEndWorkItemNetworksKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cEndWorkItemNetworkModelKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cExperimentSettingsKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cWINReplicationsKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cWINReplicationsAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cWINReplicationsWINReplicationParserRuleCall_17_0 = (RuleCall)cWINReplicationsAssignment_17.eContents().get(0);
		private final Keyword cEndWINReplicationsKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Keyword cEndExperimentSettingsKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Keyword cEndExperimentModelKeyword_20 = (Keyword)cGroup.eContents().get(20);
		
		//ExperimentModel:
		//	'ExperimentModel' name=ID
		//	"Variables"
		//	ExperimentVariables+=ExperimentVariable*
		//	"end Variables"
		//	'OrganizationalModel'
		//	'ServiceProviders'
		//	ServiceProviders+=ServiceProvider+
		//	'end ServiceProviders'
		//	'end OrganizationalModel'
		//	'WorkItemNetworkModel'
		//	'WorkItemNetworks'
		//	WorkItemNetworks+=WorkItemNetwork+
		//	'end WorkItemNetworks'
		//	'end WorkItemNetworkModel'
		//	'ExperimentSettings'
		//	'WINReplications'
		//	WINReplications+=WINReplication+
		//	'end WINReplications'
		//	'end ExperimentSettings'
		//	'end ExperimentModel';
		@Override public ParserRule getRule() { return rule; }

		//'ExperimentModel' name=ID "Variables" ExperimentVariables+=ExperimentVariable* "end Variables" 'OrganizationalModel'
		//'ServiceProviders' ServiceProviders+=ServiceProvider+ 'end ServiceProviders' 'end OrganizationalModel'
		//'WorkItemNetworkModel' 'WorkItemNetworks' WorkItemNetworks+=WorkItemNetwork+ 'end WorkItemNetworks'
		//'end WorkItemNetworkModel' 'ExperimentSettings' 'WINReplications' WINReplications+=WINReplication+
		//'end WINReplications' 'end ExperimentSettings' 'end ExperimentModel'
		public Group getGroup() { return cGroup; }

		//'ExperimentModel'
		public Keyword getExperimentModelKeyword_0() { return cExperimentModelKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"Variables"
		public Keyword getVariablesKeyword_2() { return cVariablesKeyword_2; }

		//ExperimentVariables+=ExperimentVariable*
		public Assignment getExperimentVariablesAssignment_3() { return cExperimentVariablesAssignment_3; }

		//ExperimentVariable
		public RuleCall getExperimentVariablesExperimentVariableParserRuleCall_3_0() { return cExperimentVariablesExperimentVariableParserRuleCall_3_0; }

		//"end Variables"
		public Keyword getEndVariablesKeyword_4() { return cEndVariablesKeyword_4; }

		//'OrganizationalModel'
		public Keyword getOrganizationalModelKeyword_5() { return cOrganizationalModelKeyword_5; }

		//'ServiceProviders'
		public Keyword getServiceProvidersKeyword_6() { return cServiceProvidersKeyword_6; }

		//ServiceProviders+=ServiceProvider+
		public Assignment getServiceProvidersAssignment_7() { return cServiceProvidersAssignment_7; }

		//ServiceProvider
		public RuleCall getServiceProvidersServiceProviderParserRuleCall_7_0() { return cServiceProvidersServiceProviderParserRuleCall_7_0; }

		//'end ServiceProviders'
		public Keyword getEndServiceProvidersKeyword_8() { return cEndServiceProvidersKeyword_8; }

		//'end OrganizationalModel'
		public Keyword getEndOrganizationalModelKeyword_9() { return cEndOrganizationalModelKeyword_9; }

		//'WorkItemNetworkModel'
		public Keyword getWorkItemNetworkModelKeyword_10() { return cWorkItemNetworkModelKeyword_10; }

		//'WorkItemNetworks'
		public Keyword getWorkItemNetworksKeyword_11() { return cWorkItemNetworksKeyword_11; }

		//WorkItemNetworks+=WorkItemNetwork+
		public Assignment getWorkItemNetworksAssignment_12() { return cWorkItemNetworksAssignment_12; }

		//WorkItemNetwork
		public RuleCall getWorkItemNetworksWorkItemNetworkParserRuleCall_12_0() { return cWorkItemNetworksWorkItemNetworkParserRuleCall_12_0; }

		//'end WorkItemNetworks'
		public Keyword getEndWorkItemNetworksKeyword_13() { return cEndWorkItemNetworksKeyword_13; }

		//'end WorkItemNetworkModel'
		public Keyword getEndWorkItemNetworkModelKeyword_14() { return cEndWorkItemNetworkModelKeyword_14; }

		//'ExperimentSettings'
		public Keyword getExperimentSettingsKeyword_15() { return cExperimentSettingsKeyword_15; }

		//'WINReplications'
		public Keyword getWINReplicationsKeyword_16() { return cWINReplicationsKeyword_16; }

		//WINReplications+=WINReplication+
		public Assignment getWINReplicationsAssignment_17() { return cWINReplicationsAssignment_17; }

		//WINReplication
		public RuleCall getWINReplicationsWINReplicationParserRuleCall_17_0() { return cWINReplicationsWINReplicationParserRuleCall_17_0; }

		//'end WINReplications'
		public Keyword getEndWINReplicationsKeyword_18() { return cEndWINReplicationsKeyword_18; }

		//'end ExperimentSettings'
		public Keyword getEndExperimentSettingsKeyword_19() { return cEndExperimentSettingsKeyword_19; }

		//'end ExperimentModel'
		public Keyword getEndExperimentModelKeyword_20() { return cEndExperimentModelKeyword_20; }
	}

	public class NumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.Number");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDOUBLETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Number:
		//	INT | DOUBLE;
		@Override public ParserRule getRule() { return rule; }

		//INT | DOUBLE
		public Alternatives getAlternatives() { return cAlternatives; }

		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//DOUBLE
		public RuleCall getDOUBLETerminalRuleCall_1() { return cDOUBLETerminalRuleCall_1; }
	}

	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.Parameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNumberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cBOOLEANTerminalRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Parameter:
		//	Number | STRING | ID | BOOLEAN;
		@Override public ParserRule getRule() { return rule; }

		//Number | STRING | ID | BOOLEAN
		public Alternatives getAlternatives() { return cAlternatives; }

		//Number
		public RuleCall getNumberParserRuleCall_0() { return cNumberParserRuleCall_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1() { return cSTRINGTerminalRuleCall_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_2() { return cIDTerminalRuleCall_2; }

		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_3() { return cBOOLEANTerminalRuleCall_3; }
	}

	public class AbstractParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.AbstractParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cIsVariableAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cIsVariableVarKeyword_0_0_0 = (Keyword)cIsVariableAssignment_0_0.eContents().get(0);
		private final Assignment cVariableAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cVariableExperimentVariableCrossReference_0_1_0 = (CrossReference)cVariableAssignment_0_1.eContents().get(0);
		private final RuleCall cVariableExperimentVariableIDTerminalRuleCall_0_1_0_1 = (RuleCall)cVariableExperimentVariableCrossReference_0_1_0.eContents().get(1);
		private final Assignment cValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cValueParameterParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//AbstractParameter:
		//	isVariable?="var:" variable=[ExperimentVariable] | value=Parameter;
		@Override public ParserRule getRule() { return rule; }

		//isVariable?="var:" variable=[ExperimentVariable] | value=Parameter
		public Alternatives getAlternatives() { return cAlternatives; }

		//isVariable?="var:" variable=[ExperimentVariable]
		public Group getGroup_0() { return cGroup_0; }

		//isVariable?="var:"
		public Assignment getIsVariableAssignment_0_0() { return cIsVariableAssignment_0_0; }

		//"var:"
		public Keyword getIsVariableVarKeyword_0_0_0() { return cIsVariableVarKeyword_0_0_0; }

		//variable=[ExperimentVariable]
		public Assignment getVariableAssignment_0_1() { return cVariableAssignment_0_1; }

		//[ExperimentVariable]
		public CrossReference getVariableExperimentVariableCrossReference_0_1_0() { return cVariableExperimentVariableCrossReference_0_1_0; }

		//ID
		public RuleCall getVariableExperimentVariableIDTerminalRuleCall_0_1_0_1() { return cVariableExperimentVariableIDTerminalRuleCall_0_1_0_1; }

		//value=Parameter
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//Parameter
		public RuleCall getValueParameterParserRuleCall_1_0() { return cValueParameterParserRuleCall_1_0; }
	}

	public class NumExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.NumExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cNumValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cNumValueNumberParserRuleCall_0_0 = (RuleCall)cNumValueAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cDistributionAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cDistributionRandomKeyword_1_0_0 = (Keyword)cDistributionAssignment_1_0.eContents().get(0);
		private final Assignment cNumDistAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNumDistDistributionParserRuleCall_1_1_0 = (RuleCall)cNumDistAssignment_1_1.eContents().get(0);
		
		//NumExpression:
		//	numValue=Number | distribution?='Random.' numDist=Distribution;
		@Override public ParserRule getRule() { return rule; }

		//numValue=Number | distribution?='Random.' numDist=Distribution
		public Alternatives getAlternatives() { return cAlternatives; }

		//numValue=Number
		public Assignment getNumValueAssignment_0() { return cNumValueAssignment_0; }

		//Number
		public RuleCall getNumValueNumberParserRuleCall_0_0() { return cNumValueNumberParserRuleCall_0_0; }

		//distribution?='Random.' numDist=Distribution
		public Group getGroup_1() { return cGroup_1; }

		//distribution?='Random.'
		public Assignment getDistributionAssignment_1_0() { return cDistributionAssignment_1_0; }

		//'Random.'
		public Keyword getDistributionRandomKeyword_1_0_0() { return cDistributionRandomKeyword_1_0_0; }

		//numDist=Distribution
		public Assignment getNumDistAssignment_1_1() { return cNumDistAssignment_1_1; }

		//Distribution
		public RuleCall getNumDistDistributionParserRuleCall_1_1_0() { return cNumDistDistributionParserRuleCall_1_1_0; }
	}

	public class DistributionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.Distribution");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cIsNormalAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final Keyword cIsNormalNormalKeyword_0_0_0 = (Keyword)cIsNormalAssignment_0_0.eContents().get(0);
		private final Assignment cIsUniformAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cIsUniformUniformKeyword_0_1_0 = (Keyword)cIsUniformAssignment_0_1.eContents().get(0);
		private final Assignment cIsExponentialAssignment_0_2 = (Assignment)cAlternatives_0.eContents().get(2);
		private final Keyword cIsExponentialExponentialKeyword_0_2_0 = (Keyword)cIsExponentialAssignment_0_2.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cParametersAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_2_0 = (RuleCall)cParametersAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cParametersAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_3_1_0 = (RuleCall)cParametersAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Distribution:
		//	(isNormal?="Normal" | isUniform?="Uniform" | isExponential?="Exponential")
		//	'[' parameters+=Parameter (',' parameters+=Parameter)* ']';
		@Override public ParserRule getRule() { return rule; }

		//(isNormal?="Normal" | isUniform?="Uniform" | isExponential?="Exponential") '[' parameters+=Parameter (','
		//parameters+=Parameter)* ']'
		public Group getGroup() { return cGroup; }

		//isNormal?="Normal" | isUniform?="Uniform" | isExponential?="Exponential"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//isNormal?="Normal"
		public Assignment getIsNormalAssignment_0_0() { return cIsNormalAssignment_0_0; }

		//"Normal"
		public Keyword getIsNormalNormalKeyword_0_0_0() { return cIsNormalNormalKeyword_0_0_0; }

		//isUniform?="Uniform"
		public Assignment getIsUniformAssignment_0_1() { return cIsUniformAssignment_0_1; }

		//"Uniform"
		public Keyword getIsUniformUniformKeyword_0_1_0() { return cIsUniformUniformKeyword_0_1_0; }

		//isExponential?="Exponential"
		public Assignment getIsExponentialAssignment_0_2() { return cIsExponentialAssignment_0_2; }

		//"Exponential"
		public Keyword getIsExponentialExponentialKeyword_0_2_0() { return cIsExponentialExponentialKeyword_0_2_0; }

		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//parameters+=Parameter
		public Assignment getParametersAssignment_2() { return cParametersAssignment_2; }

		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_0() { return cParametersParameterParserRuleCall_2_0; }

		//(',' parameters+=Parameter)*
		public Group getGroup_3() { return cGroup_3; }

		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//parameters+=Parameter
		public Assignment getParametersAssignment_3_1() { return cParametersAssignment_3_1; }

		//Parameter
		public RuleCall getParametersParameterParserRuleCall_3_1_0() { return cParametersParameterParserRuleCall_3_1_0; }

		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class GovernanceStrategyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.GovernanceStrategy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPullStrategyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPullStrategyPullStrategyParserRuleCall_2_0 = (RuleCall)cPullStrategyAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//// ------------------------ Governance Objects ---------------------------------
		//GovernanceStrategy:
		//	name=ID
		//	"{"
		//	pullStrategy=PullStrategy
		//	"}";
		@Override public ParserRule getRule() { return rule; }

		//name=ID "{" pullStrategy=PullStrategy "}"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//pullStrategy=PullStrategy
		public Assignment getPullStrategyAssignment_2() { return cPullStrategyAssignment_2; }

		//PullStrategy
		public RuleCall getPullStrategyPullStrategyParserRuleCall_2_0() { return cPullStrategyPullStrategyParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class PullStrategyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.PullStrategy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMechanismsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMechanismsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMechanismsMechanismParserRuleCall_2_0 = (RuleCall)cMechanismsAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//PullStrategy:
		//	'mechanisms' '{' mechanisms+=Mechanism+ '}';
		@Override public ParserRule getRule() { return rule; }

		//'mechanisms' '{' mechanisms+=Mechanism+ '}'
		public Group getGroup() { return cGroup; }

		//'mechanisms'
		public Keyword getMechanismsKeyword_0() { return cMechanismsKeyword_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//mechanisms+=Mechanism+
		public Assignment getMechanismsAssignment_2() { return cMechanismsAssignment_2; }

		//Mechanism
		public RuleCall getMechanismsMechanismParserRuleCall_2_0() { return cMechanismsMechanismParserRuleCall_2_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class MechanismElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.Mechanism");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueParameterParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cAttributesKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cAttributesAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cAttributesMechanismAttributeParserRuleCall_3_1_2_0 = (RuleCall)cAttributesAssignment_3_1_2.eContents().get(0);
		private final Group cGroup_3_1_3 = (Group)cGroup_3_1.eContents().get(3);
		private final Keyword cCommaKeyword_3_1_3_0 = (Keyword)cGroup_3_1_3.eContents().get(0);
		private final Assignment cAttributesAssignment_3_1_3_1 = (Assignment)cGroup_3_1_3.eContents().get(1);
		private final RuleCall cAttributesMechanismAttributeParserRuleCall_3_1_3_1_0 = (RuleCall)cAttributesAssignment_3_1_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_1_4 = (Keyword)cGroup_3_1.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//Mechanism:
		//	name=ID '=' value=Parameter ('{' ('attributes' '{' attributes+=MechanismAttribute (','
		//	attributes+=MechanismAttribute)* '}')?
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }

		//name=ID '=' value=Parameter ('{' ('attributes' '{' attributes+=MechanismAttribute (',' attributes+=MechanismAttribute)*
		//'}')? '}')?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=Parameter
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//Parameter
		public RuleCall getValueParameterParserRuleCall_2_0() { return cValueParameterParserRuleCall_2_0; }

		//('{' ('attributes' '{' attributes+=MechanismAttribute (',' attributes+=MechanismAttribute)* '}')? '}')?
		public Group getGroup_3() { return cGroup_3; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }

		//('attributes' '{' attributes+=MechanismAttribute (',' attributes+=MechanismAttribute)* '}')?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//'attributes'
		public Keyword getAttributesKeyword_3_1_0() { return cAttributesKeyword_3_1_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1_1() { return cLeftCurlyBracketKeyword_3_1_1; }

		//attributes+=MechanismAttribute
		public Assignment getAttributesAssignment_3_1_2() { return cAttributesAssignment_3_1_2; }

		//MechanismAttribute
		public RuleCall getAttributesMechanismAttributeParserRuleCall_3_1_2_0() { return cAttributesMechanismAttributeParserRuleCall_3_1_2_0; }

		//(',' attributes+=MechanismAttribute)*
		public Group getGroup_3_1_3() { return cGroup_3_1_3; }

		//','
		public Keyword getCommaKeyword_3_1_3_0() { return cCommaKeyword_3_1_3_0; }

		//attributes+=MechanismAttribute
		public Assignment getAttributesAssignment_3_1_3_1() { return cAttributesAssignment_3_1_3_1; }

		//MechanismAttribute
		public RuleCall getAttributesMechanismAttributeParserRuleCall_3_1_3_1_0() { return cAttributesMechanismAttributeParserRuleCall_3_1_3_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_3_1_4() { return cRightCurlyBracketKeyword_3_1_4; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_3_2() { return cRightCurlyBracketKeyword_3_2; }
	}

	public class MechanismAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.MechanismAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueParameterParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//MechanismAttribute:
		//	name=ID '=' value=Parameter;
		@Override public ParserRule getRule() { return rule; }

		//name=ID '=' value=Parameter
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=Parameter
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//Parameter
		public RuleCall getValueParameterParserRuleCall_2_0() { return cValueParameterParserRuleCall_2_0; }
	}

	public class WorkItemTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.WorkItemType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cHierarchyKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cHierarchyAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cHierarchyINTTerminalRuleCall_2_2_0 = (RuleCall)cHierarchyAssignment_2_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdINTTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		
		//// ------------------------ WorkItem Objects ---------------------------------
		//WorkItemType:
		//	name=ID '{' ('hierarchy' '=' hierarchy=INT)?
		//	'}'
		//	id=INT?;
		@Override public ParserRule getRule() { return rule; }

		//name=ID '{' ('hierarchy' '=' hierarchy=INT)? '}' id=INT?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//('hierarchy' '=' hierarchy=INT)?
		public Group getGroup_2() { return cGroup_2; }

		//'hierarchy'
		public Keyword getHierarchyKeyword_2_0() { return cHierarchyKeyword_2_0; }

		//'='
		public Keyword getEqualsSignKeyword_2_1() { return cEqualsSignKeyword_2_1; }

		//hierarchy=INT
		public Assignment getHierarchyAssignment_2_2() { return cHierarchyAssignment_2_2; }

		//INT
		public RuleCall getHierarchyINTTerminalRuleCall_2_2_0() { return cHierarchyINTTerminalRuleCall_2_2_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }

		//id=INT?
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }

		//INT
		public RuleCall getIdINTTerminalRuleCall_4_0() { return cIdINTTerminalRuleCall_4_0; }
	}

	public class WorkItemNetworkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.WorkItemNetwork");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkItemNetworkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cWorkItemsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cWorkItemsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cWorkItemsWorkItemParserRuleCall_5_0 = (RuleCall)cWorkItemsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cIdAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cIdINTTerminalRuleCall_8_0 = (RuleCall)cIdAssignment_8.eContents().get(0);
		
		//WorkItemNetwork:
		//	'WorkItemNetwork' name=ID '{'
		//	'WorkItems' '{' workItems+=WorkItem+ '}'
		//	'}'
		//	id=INT?;
		@Override public ParserRule getRule() { return rule; }

		//'WorkItemNetwork' name=ID '{' 'WorkItems' '{' workItems+=WorkItem+ '}' '}' id=INT?
		public Group getGroup() { return cGroup; }

		//'WorkItemNetwork'
		public Keyword getWorkItemNetworkKeyword_0() { return cWorkItemNetworkKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//'WorkItems'
		public Keyword getWorkItemsKeyword_3() { return cWorkItemsKeyword_3; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//workItems+=WorkItem+
		public Assignment getWorkItemsAssignment_5() { return cWorkItemsAssignment_5; }

		//WorkItem
		public RuleCall getWorkItemsWorkItemParserRuleCall_5_0() { return cWorkItemsWorkItemParserRuleCall_5_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//id=INT?
		public Assignment getIdAssignment_8() { return cIdAssignment_8; }

		//INT
		public RuleCall getIdINTTerminalRuleCall_8_0() { return cIdINTTerminalRuleCall_8_0; }
	}

	public class WorkItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.WorkItem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cTypeAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final CrossReference cTypeWorkItemTypeCrossReference_1_2_0 = (CrossReference)cTypeAssignment_1_2.eContents().get(0);
		private final RuleCall cTypeWorkItemTypeIDTerminalRuleCall_1_2_0_1 = (RuleCall)cTypeWorkItemTypeCrossReference_1_2_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cHasPredecessorsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cHasPredecessorsPrerequisitesKeyword_3_0_0 = (Keyword)cHasPredecessorsAssignment_3_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cPTasksAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cPTasksWorkItemCrossReference_3_2_0 = (CrossReference)cPTasksAssignment_3_2.eContents().get(0);
		private final RuleCall cPTasksWorkItemIDTerminalRuleCall_3_2_0_1 = (RuleCall)cPTasksWorkItemCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cPTasksAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cPTasksWorkItemCrossReference_3_3_1_0 = (CrossReference)cPTasksAssignment_3_3_1.eContents().get(0);
		private final RuleCall cPTasksWorkItemIDTerminalRuleCall_3_3_1_0_1 = (RuleCall)cPTasksWorkItemCrossReference_3_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Assignment cHasSubtasksAssignment_4_0_0 = (Assignment)cGroup_4_0.eContents().get(0);
		private final Keyword cHasSubtasksDecompositesKeyword_4_0_0_0 = (Keyword)cHasSubtasksAssignment_4_0_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_0_1 = (Keyword)cGroup_4_0.eContents().get(1);
		private final Assignment cSTasksAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final CrossReference cSTasksWorkItemCrossReference_4_0_2_0 = (CrossReference)cSTasksAssignment_4_0_2.eContents().get(0);
		private final RuleCall cSTasksWorkItemIDTerminalRuleCall_4_0_2_0_1 = (RuleCall)cSTasksWorkItemCrossReference_4_0_2_0.eContents().get(1);
		private final Group cGroup_4_0_3 = (Group)cGroup_4_0.eContents().get(3);
		private final Keyword cCommaKeyword_4_0_3_0 = (Keyword)cGroup_4_0_3.eContents().get(0);
		private final Assignment cSTasksAssignment_4_0_3_1 = (Assignment)cGroup_4_0_3.eContents().get(1);
		private final CrossReference cSTasksWorkItemCrossReference_4_0_3_1_0 = (CrossReference)cSTasksAssignment_4_0_3_1.eContents().get(0);
		private final RuleCall cSTasksWorkItemIDTerminalRuleCall_4_0_3_1_0_1 = (RuleCall)cSTasksWorkItemCrossReference_4_0_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4_0_4 = (Keyword)cGroup_4_0.eContents().get(4);
		private final Group cGroup_4_0_5 = (Group)cGroup_4_0.eContents().get(5);
		private final Keyword cAnalysisEffortsKeyword_4_0_5_0 = (Keyword)cGroup_4_0_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_0_5_1 = (Keyword)cGroup_4_0_5.eContents().get(1);
		private final Assignment cRequiredAnalysisAssignment_4_0_5_2 = (Assignment)cGroup_4_0_5.eContents().get(2);
		private final RuleCall cRequiredAnalysisRequiredServiceParserRuleCall_4_0_5_2_0 = (RuleCall)cRequiredAnalysisAssignment_4_0_5_2.eContents().get(0);
		private final Group cGroup_4_0_5_3 = (Group)cGroup_4_0_5.eContents().get(3);
		private final Keyword cCommaKeyword_4_0_5_3_0 = (Keyword)cGroup_4_0_5_3.eContents().get(0);
		private final Assignment cRequiredAnalysisAssignment_4_0_5_3_1 = (Assignment)cGroup_4_0_5_3.eContents().get(1);
		private final RuleCall cRequiredAnalysisRequiredServiceParserRuleCall_4_0_5_3_1_0 = (RuleCall)cRequiredAnalysisAssignment_4_0_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_0_5_4 = (Keyword)cGroup_4_0_5.eContents().get(4);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Group cGroup_4_1_0 = (Group)cGroup_4_1.eContents().get(0);
		private final Keyword cAnalysisEffortsKeyword_4_1_0_0 = (Keyword)cGroup_4_1_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1_0_1 = (Keyword)cGroup_4_1_0.eContents().get(1);
		private final Assignment cRequiredAnalysisAssignment_4_1_0_2 = (Assignment)cGroup_4_1_0.eContents().get(2);
		private final RuleCall cRequiredAnalysisRequiredServiceParserRuleCall_4_1_0_2_0 = (RuleCall)cRequiredAnalysisAssignment_4_1_0_2.eContents().get(0);
		private final Group cGroup_4_1_0_3 = (Group)cGroup_4_1_0.eContents().get(3);
		private final Keyword cCommaKeyword_4_1_0_3_0 = (Keyword)cGroup_4_1_0_3.eContents().get(0);
		private final Assignment cRequiredAnalysisAssignment_4_1_0_3_1 = (Assignment)cGroup_4_1_0_3.eContents().get(1);
		private final RuleCall cRequiredAnalysisRequiredServiceParserRuleCall_4_1_0_3_1_0 = (RuleCall)cRequiredAnalysisAssignment_4_1_0_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_1_0_4 = (Keyword)cGroup_4_1_0.eContents().get(4);
		private final Keyword cEffortsKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4_1_2 = (Keyword)cGroup_4_1.eContents().get(2);
		private final Assignment cRequiredServicesAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cRequiredServicesRequiredServiceParserRuleCall_4_1_3_0 = (RuleCall)cRequiredServicesAssignment_4_1_3.eContents().get(0);
		private final Group cGroup_4_1_4 = (Group)cGroup_4_1.eContents().get(4);
		private final Keyword cCommaKeyword_4_1_4_0 = (Keyword)cGroup_4_1_4.eContents().get(0);
		private final Assignment cRequiredServicesAssignment_4_1_4_1 = (Assignment)cGroup_4_1_4.eContents().get(1);
		private final RuleCall cRequiredServicesRequiredServiceParserRuleCall_4_1_4_1_0 = (RuleCall)cRequiredServicesAssignment_4_1_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_1_5 = (Keyword)cGroup_4_1.eContents().get(5);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cHasImpactsAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cHasImpactsImpactsKeyword_5_0_0 = (Keyword)cHasImpactsAssignment_5_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cImpactsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cImpactsImpactParserRuleCall_5_2_0 = (RuleCall)cImpactsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cImpactsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cImpactsImpactParserRuleCall_5_3_1_0 = (RuleCall)cImpactsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cValueKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cValueAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cValueNumExpressionParserRuleCall_6_1_0 = (RuleCall)cValueAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cArrivalKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cArrivalTimeAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cArrivalTimeINTTerminalRuleCall_7_1_0 = (RuleCall)cArrivalTimeAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cDurationKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cDurationAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cDurationINTTerminalRuleCall_8_1_0 = (RuleCall)cDurationAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cIdAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cIdINTTerminalRuleCall_10_0 = (RuleCall)cIdAssignment_10.eContents().get(0);
		
		//WorkItem:
		//	name=ID ("type" ":" type=[WorkItemType])? '{' (hasPredecessors?='prerequisites' '{' pTasks+=[WorkItem] (','
		//	pTasks+=[WorkItem])* '}')? ((hasSubtasks?='decomposites' '{' sTasks+=[WorkItem] (',' sTasks+=[WorkItem])* '}'
		//	('analysisEfforts' '{' requiredAnalysis+=RequiredService (',' requiredAnalysis+=RequiredService)* '}')?)?
		//	| ('analysisEfforts' '{' requiredAnalysis+=RequiredService (',' requiredAnalysis+=RequiredService)* '}')?
		//	'efforts' '{' requiredServices+=RequiredService (',' requiredServices+=RequiredService)* '}') (hasImpacts?='impacts'
		//	'{' impacts+=Impact (',' impacts+=Impact)* '}')? ('value' value=NumExpression)? ('arrival' arrivalTime=INT)?
		//	('duration' duration=INT)?
		//	'}'
		//	id=INT?;
		@Override public ParserRule getRule() { return rule; }

		//name=ID ("type" ":" type=[WorkItemType])? '{' (hasPredecessors?='prerequisites' '{' pTasks+=[WorkItem] (','
		//pTasks+=[WorkItem])* '}')? ((hasSubtasks?='decomposites' '{' sTasks+=[WorkItem] (',' sTasks+=[WorkItem])* '}'
		//('analysisEfforts' '{' requiredAnalysis+=RequiredService (',' requiredAnalysis+=RequiredService)* '}')?)? |
		//('analysisEfforts' '{' requiredAnalysis+=RequiredService (',' requiredAnalysis+=RequiredService)* '}')? 'efforts' '{'
		//requiredServices+=RequiredService (',' requiredServices+=RequiredService)* '}') (hasImpacts?='impacts' '{'
		//impacts+=Impact (',' impacts+=Impact)* '}')? ('value' value=NumExpression)? ('arrival' arrivalTime=INT)? ('duration'
		//duration=INT)? '}' id=INT?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//("type" ":" type=[WorkItemType])?
		public Group getGroup_1() { return cGroup_1; }

		//"type"
		public Keyword getTypeKeyword_1_0() { return cTypeKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//type=[WorkItemType]
		public Assignment getTypeAssignment_1_2() { return cTypeAssignment_1_2; }

		//[WorkItemType]
		public CrossReference getTypeWorkItemTypeCrossReference_1_2_0() { return cTypeWorkItemTypeCrossReference_1_2_0; }

		//ID
		public RuleCall getTypeWorkItemTypeIDTerminalRuleCall_1_2_0_1() { return cTypeWorkItemTypeIDTerminalRuleCall_1_2_0_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//(hasPredecessors?='prerequisites' '{' pTasks+=[WorkItem] (',' pTasks+=[WorkItem])* '}')?
		public Group getGroup_3() { return cGroup_3; }

		//hasPredecessors?='prerequisites'
		public Assignment getHasPredecessorsAssignment_3_0() { return cHasPredecessorsAssignment_3_0; }

		//'prerequisites'
		public Keyword getHasPredecessorsPrerequisitesKeyword_3_0_0() { return cHasPredecessorsPrerequisitesKeyword_3_0_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }

		//pTasks+=[WorkItem]
		public Assignment getPTasksAssignment_3_2() { return cPTasksAssignment_3_2; }

		//[WorkItem]
		public CrossReference getPTasksWorkItemCrossReference_3_2_0() { return cPTasksWorkItemCrossReference_3_2_0; }

		//ID
		public RuleCall getPTasksWorkItemIDTerminalRuleCall_3_2_0_1() { return cPTasksWorkItemIDTerminalRuleCall_3_2_0_1; }

		//(',' pTasks+=[WorkItem])*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//','
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//pTasks+=[WorkItem]
		public Assignment getPTasksAssignment_3_3_1() { return cPTasksAssignment_3_3_1; }

		//[WorkItem]
		public CrossReference getPTasksWorkItemCrossReference_3_3_1_0() { return cPTasksWorkItemCrossReference_3_3_1_0; }

		//ID
		public RuleCall getPTasksWorkItemIDTerminalRuleCall_3_3_1_0_1() { return cPTasksWorkItemIDTerminalRuleCall_3_3_1_0_1; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }

		//(hasSubtasks?='decomposites' '{' sTasks+=[WorkItem] (',' sTasks+=[WorkItem])* '}' ('analysisEfforts' '{'
		//requiredAnalysis+=RequiredService (',' requiredAnalysis+=RequiredService)* '}')?)? | ('analysisEfforts' '{'
		//requiredAnalysis+=RequiredService (',' requiredAnalysis+=RequiredService)* '}')? 'efforts' '{'
		//requiredServices+=RequiredService (',' requiredServices+=RequiredService)* '}'
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//(hasSubtasks?='decomposites' '{' sTasks+=[WorkItem] (',' sTasks+=[WorkItem])* '}' ('analysisEfforts' '{'
		//requiredAnalysis+=RequiredService (',' requiredAnalysis+=RequiredService)* '}')?)?
		public Group getGroup_4_0() { return cGroup_4_0; }

		//hasSubtasks?='decomposites'
		public Assignment getHasSubtasksAssignment_4_0_0() { return cHasSubtasksAssignment_4_0_0; }

		//'decomposites'
		public Keyword getHasSubtasksDecompositesKeyword_4_0_0_0() { return cHasSubtasksDecompositesKeyword_4_0_0_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_0_1() { return cLeftCurlyBracketKeyword_4_0_1; }

		//sTasks+=[WorkItem]
		public Assignment getSTasksAssignment_4_0_2() { return cSTasksAssignment_4_0_2; }

		//[WorkItem]
		public CrossReference getSTasksWorkItemCrossReference_4_0_2_0() { return cSTasksWorkItemCrossReference_4_0_2_0; }

		//ID
		public RuleCall getSTasksWorkItemIDTerminalRuleCall_4_0_2_0_1() { return cSTasksWorkItemIDTerminalRuleCall_4_0_2_0_1; }

		//(',' sTasks+=[WorkItem])*
		public Group getGroup_4_0_3() { return cGroup_4_0_3; }

		//','
		public Keyword getCommaKeyword_4_0_3_0() { return cCommaKeyword_4_0_3_0; }

		//sTasks+=[WorkItem]
		public Assignment getSTasksAssignment_4_0_3_1() { return cSTasksAssignment_4_0_3_1; }

		//[WorkItem]
		public CrossReference getSTasksWorkItemCrossReference_4_0_3_1_0() { return cSTasksWorkItemCrossReference_4_0_3_1_0; }

		//ID
		public RuleCall getSTasksWorkItemIDTerminalRuleCall_4_0_3_1_0_1() { return cSTasksWorkItemIDTerminalRuleCall_4_0_3_1_0_1; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_4_0_4() { return cRightCurlyBracketKeyword_4_0_4; }

		//('analysisEfforts' '{' requiredAnalysis+=RequiredService (',' requiredAnalysis+=RequiredService)* '}')?
		public Group getGroup_4_0_5() { return cGroup_4_0_5; }

		//'analysisEfforts'
		public Keyword getAnalysisEffortsKeyword_4_0_5_0() { return cAnalysisEffortsKeyword_4_0_5_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_0_5_1() { return cLeftCurlyBracketKeyword_4_0_5_1; }

		//requiredAnalysis+=RequiredService
		public Assignment getRequiredAnalysisAssignment_4_0_5_2() { return cRequiredAnalysisAssignment_4_0_5_2; }

		//RequiredService
		public RuleCall getRequiredAnalysisRequiredServiceParserRuleCall_4_0_5_2_0() { return cRequiredAnalysisRequiredServiceParserRuleCall_4_0_5_2_0; }

		//(',' requiredAnalysis+=RequiredService)*
		public Group getGroup_4_0_5_3() { return cGroup_4_0_5_3; }

		//','
		public Keyword getCommaKeyword_4_0_5_3_0() { return cCommaKeyword_4_0_5_3_0; }

		//requiredAnalysis+=RequiredService
		public Assignment getRequiredAnalysisAssignment_4_0_5_3_1() { return cRequiredAnalysisAssignment_4_0_5_3_1; }

		//RequiredService
		public RuleCall getRequiredAnalysisRequiredServiceParserRuleCall_4_0_5_3_1_0() { return cRequiredAnalysisRequiredServiceParserRuleCall_4_0_5_3_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_4_0_5_4() { return cRightCurlyBracketKeyword_4_0_5_4; }

		//('analysisEfforts' '{' requiredAnalysis+=RequiredService (',' requiredAnalysis+=RequiredService)* '}')? 'efforts' '{'
		//requiredServices+=RequiredService (',' requiredServices+=RequiredService)* '}'
		public Group getGroup_4_1() { return cGroup_4_1; }

		//('analysisEfforts' '{' requiredAnalysis+=RequiredService (',' requiredAnalysis+=RequiredService)* '}')?
		public Group getGroup_4_1_0() { return cGroup_4_1_0; }

		//'analysisEfforts'
		public Keyword getAnalysisEffortsKeyword_4_1_0_0() { return cAnalysisEffortsKeyword_4_1_0_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1_0_1() { return cLeftCurlyBracketKeyword_4_1_0_1; }

		//requiredAnalysis+=RequiredService
		public Assignment getRequiredAnalysisAssignment_4_1_0_2() { return cRequiredAnalysisAssignment_4_1_0_2; }

		//RequiredService
		public RuleCall getRequiredAnalysisRequiredServiceParserRuleCall_4_1_0_2_0() { return cRequiredAnalysisRequiredServiceParserRuleCall_4_1_0_2_0; }

		//(',' requiredAnalysis+=RequiredService)*
		public Group getGroup_4_1_0_3() { return cGroup_4_1_0_3; }

		//','
		public Keyword getCommaKeyword_4_1_0_3_0() { return cCommaKeyword_4_1_0_3_0; }

		//requiredAnalysis+=RequiredService
		public Assignment getRequiredAnalysisAssignment_4_1_0_3_1() { return cRequiredAnalysisAssignment_4_1_0_3_1; }

		//RequiredService
		public RuleCall getRequiredAnalysisRequiredServiceParserRuleCall_4_1_0_3_1_0() { return cRequiredAnalysisRequiredServiceParserRuleCall_4_1_0_3_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_4_1_0_4() { return cRightCurlyBracketKeyword_4_1_0_4; }

		//'efforts'
		public Keyword getEffortsKeyword_4_1_1() { return cEffortsKeyword_4_1_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1_2() { return cLeftCurlyBracketKeyword_4_1_2; }

		//requiredServices+=RequiredService
		public Assignment getRequiredServicesAssignment_4_1_3() { return cRequiredServicesAssignment_4_1_3; }

		//RequiredService
		public RuleCall getRequiredServicesRequiredServiceParserRuleCall_4_1_3_0() { return cRequiredServicesRequiredServiceParserRuleCall_4_1_3_0; }

		//(',' requiredServices+=RequiredService)*
		public Group getGroup_4_1_4() { return cGroup_4_1_4; }

		//','
		public Keyword getCommaKeyword_4_1_4_0() { return cCommaKeyword_4_1_4_0; }

		//requiredServices+=RequiredService
		public Assignment getRequiredServicesAssignment_4_1_4_1() { return cRequiredServicesAssignment_4_1_4_1; }

		//RequiredService
		public RuleCall getRequiredServicesRequiredServiceParserRuleCall_4_1_4_1_0() { return cRequiredServicesRequiredServiceParserRuleCall_4_1_4_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_4_1_5() { return cRightCurlyBracketKeyword_4_1_5; }

		//(hasImpacts?='impacts' '{' impacts+=Impact (',' impacts+=Impact)* '}')?
		public Group getGroup_5() { return cGroup_5; }

		//hasImpacts?='impacts'
		public Assignment getHasImpactsAssignment_5_0() { return cHasImpactsAssignment_5_0; }

		//'impacts'
		public Keyword getHasImpactsImpactsKeyword_5_0_0() { return cHasImpactsImpactsKeyword_5_0_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }

		//impacts+=Impact
		public Assignment getImpactsAssignment_5_2() { return cImpactsAssignment_5_2; }

		//Impact
		public RuleCall getImpactsImpactParserRuleCall_5_2_0() { return cImpactsImpactParserRuleCall_5_2_0; }

		//(',' impacts+=Impact)*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//','
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }

		//impacts+=Impact
		public Assignment getImpactsAssignment_5_3_1() { return cImpactsAssignment_5_3_1; }

		//Impact
		public RuleCall getImpactsImpactParserRuleCall_5_3_1_0() { return cImpactsImpactParserRuleCall_5_3_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }

		//('value' value=NumExpression)?
		public Group getGroup_6() { return cGroup_6; }

		//'value'
		public Keyword getValueKeyword_6_0() { return cValueKeyword_6_0; }

		//value=NumExpression
		public Assignment getValueAssignment_6_1() { return cValueAssignment_6_1; }

		//NumExpression
		public RuleCall getValueNumExpressionParserRuleCall_6_1_0() { return cValueNumExpressionParserRuleCall_6_1_0; }

		//('arrival' arrivalTime=INT)?
		public Group getGroup_7() { return cGroup_7; }

		//'arrival'
		public Keyword getArrivalKeyword_7_0() { return cArrivalKeyword_7_0; }

		//arrivalTime=INT
		public Assignment getArrivalTimeAssignment_7_1() { return cArrivalTimeAssignment_7_1; }

		//INT
		public RuleCall getArrivalTimeINTTerminalRuleCall_7_1_0() { return cArrivalTimeINTTerminalRuleCall_7_1_0; }

		//('duration' duration=INT)?
		public Group getGroup_8() { return cGroup_8; }

		//'duration'
		public Keyword getDurationKeyword_8_0() { return cDurationKeyword_8_0; }

		//duration=INT
		public Assignment getDurationAssignment_8_1() { return cDurationAssignment_8_1; }

		//INT
		public RuleCall getDurationINTTerminalRuleCall_8_1_0() { return cDurationINTTerminalRuleCall_8_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }

		//id=INT?
		public Assignment getIdAssignment_10() { return cIdAssignment_10; }

		//INT
		public RuleCall getIdINTTerminalRuleCall_10_0() { return cIdINTTerminalRuleCall_10_0; }
	}

	public class RequiredServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.RequiredService");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cServiceTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cServiceTypeServiceCrossReference_1_0 = (CrossReference)cServiceTypeAssignment_1.eContents().get(0);
		private final RuleCall cServiceTypeServiceIDTerminalRuleCall_1_0_1 = (RuleCall)cServiceTypeServiceCrossReference_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEffortsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEffortsAbstractParameterParserRuleCall_3_0 = (RuleCall)cEffortsAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RequiredService:
		//	"[" serviceType=[Service] "," efforts=AbstractParameter "]";
		@Override public ParserRule getRule() { return rule; }

		//"[" serviceType=[Service] "," efforts=AbstractParameter "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//serviceType=[Service]
		public Assignment getServiceTypeAssignment_1() { return cServiceTypeAssignment_1; }

		//[Service]
		public CrossReference getServiceTypeServiceCrossReference_1_0() { return cServiceTypeServiceCrossReference_1_0; }

		//ID
		public RuleCall getServiceTypeServiceIDTerminalRuleCall_1_0_1() { return cServiceTypeServiceIDTerminalRuleCall_1_0_1; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//efforts=AbstractParameter
		public Assignment getEffortsAssignment_3() { return cEffortsAssignment_3; }

		//AbstractParameter
		public RuleCall getEffortsAbstractParameterParserRuleCall_3_0() { return cEffortsAbstractParameterParserRuleCall_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class ImpactElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.Impact");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImpactWIAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cImpactWIWorkItemCrossReference_0_0 = (CrossReference)cImpactWIAssignment_0.eContents().get(0);
		private final RuleCall cImpactWIWorkItemIDTerminalRuleCall_0_0_1 = (RuleCall)cImpactWIWorkItemCrossReference_0_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLikelihoodAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLikelihoodAbstractParameterParserRuleCall_2_0 = (RuleCall)cLikelihoodAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRiskAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRiskAbstractParameterParserRuleCall_4_0 = (RuleCall)cRiskAssignment_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Impact:
		//	impactWI=[WorkItem] '[' likelihood=AbstractParameter ',' risk=AbstractParameter ']';
		@Override public ParserRule getRule() { return rule; }

		//impactWI=[WorkItem] '[' likelihood=AbstractParameter ',' risk=AbstractParameter ']'
		public Group getGroup() { return cGroup; }

		//impactWI=[WorkItem]
		public Assignment getImpactWIAssignment_0() { return cImpactWIAssignment_0; }

		//[WorkItem]
		public CrossReference getImpactWIWorkItemCrossReference_0_0() { return cImpactWIWorkItemCrossReference_0_0; }

		//ID
		public RuleCall getImpactWIWorkItemIDTerminalRuleCall_0_0_1() { return cImpactWIWorkItemIDTerminalRuleCall_0_0_1; }

		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//likelihood=AbstractParameter
		public Assignment getLikelihoodAssignment_2() { return cLikelihoodAssignment_2; }

		//AbstractParameter
		public RuleCall getLikelihoodAbstractParameterParserRuleCall_2_0() { return cLikelihoodAbstractParameterParserRuleCall_2_0; }

		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//risk=AbstractParameter
		public Assignment getRiskAssignment_4() { return cRiskAssignment_4; }

		//AbstractParameter
		public RuleCall getRiskAbstractParameterParserRuleCall_4_0() { return cRiskAbstractParameterParserRuleCall_4_0; }

		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class ServiceProviderTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.ServiceProviderType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIdINTTerminalRuleCall_0_0 = (RuleCall)cIdAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHierarchyKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cHierarchyAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cHierarchyINTTerminalRuleCall_3_2_0 = (RuleCall)cHierarchyAssignment_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//// ------------------------ Organizational Objects ---------------------------------
		//ServiceProviderType:
		//	id=INT?
		//	name=ID '{' ('hierarchy' '=' hierarchy=INT)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//id=INT? name=ID '{' ('hierarchy' '=' hierarchy=INT)? '}'
		public Group getGroup() { return cGroup; }

		//id=INT?
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }

		//INT
		public RuleCall getIdINTTerminalRuleCall_0_0() { return cIdINTTerminalRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//('hierarchy' '=' hierarchy=INT)?
		public Group getGroup_3() { return cGroup_3; }

		//'hierarchy'
		public Keyword getHierarchyKeyword_3_0() { return cHierarchyKeyword_3_0; }

		//'='
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }

		//hierarchy=INT
		public Assignment getHierarchyAssignment_3_2() { return cHierarchyAssignment_3_2; }

		//INT
		public RuleCall getHierarchyINTTerminalRuleCall_3_2_0() { return cHierarchyINTTerminalRuleCall_3_2_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cHierarchyKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Assignment cHierarchyAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cHierarchyINTTerminalRuleCall_1_1_2_0 = (RuleCall)cHierarchyAssignment_1_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIdINTTerminalRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		
		//Service:
		//	name=ID ('{' ('hierarchy' '=' hierarchy=INT)?
		//	'}')?
		//	id=INT?;
		@Override public ParserRule getRule() { return rule; }

		//name=ID ('{' ('hierarchy' '=' hierarchy=INT)? '}')? id=INT?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//('{' ('hierarchy' '=' hierarchy=INT)? '}')?
		public Group getGroup_1() { return cGroup_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }

		//('hierarchy' '=' hierarchy=INT)?
		public Group getGroup_1_1() { return cGroup_1_1; }

		//'hierarchy'
		public Keyword getHierarchyKeyword_1_1_0() { return cHierarchyKeyword_1_1_0; }

		//'='
		public Keyword getEqualsSignKeyword_1_1_1() { return cEqualsSignKeyword_1_1_1; }

		//hierarchy=INT
		public Assignment getHierarchyAssignment_1_1_2() { return cHierarchyAssignment_1_1_2; }

		//INT
		public RuleCall getHierarchyINTTerminalRuleCall_1_1_2_0() { return cHierarchyINTTerminalRuleCall_1_1_2_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }

		//id=INT?
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }

		//INT
		public RuleCall getIdINTTerminalRuleCall_2_0() { return cIdINTTerminalRuleCall_2_0; }
	}

	public class ServiceProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.ServiceProvider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cTypeAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final CrossReference cTypeServiceProviderTypeCrossReference_1_2_0 = (CrossReference)cTypeAssignment_1_2.eContents().get(0);
		private final RuleCall cTypeServiceProviderTypeIDTerminalRuleCall_1_2_0_1 = (RuleCall)cTypeServiceProviderTypeCrossReference_1_2_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAssignToKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cAssignToAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cAssignToServiceProviderCrossReference_3_2_0 = (CrossReference)cAssignToAssignment_3_2.eContents().get(0);
		private final RuleCall cAssignToServiceProviderIDTerminalRuleCall_3_2_0_1 = (RuleCall)cAssignToServiceProviderCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cAssignToAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cAssignToServiceProviderCrossReference_3_3_1_0 = (CrossReference)cAssignToAssignment_3_3_1.eContents().get(0);
		private final RuleCall cAssignToServiceProviderIDTerminalRuleCall_3_3_1_0_1 = (RuleCall)cAssignToServiceProviderCrossReference_3_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cStrategyKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cColonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cGovernanceStrategyAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cGovernanceStrategyGovernanceStrategyCrossReference_4_2_0 = (CrossReference)cGovernanceStrategyAssignment_4_2.eContents().get(0);
		private final RuleCall cGovernanceStrategyGovernanceStrategyIDTerminalRuleCall_4_2_0_1 = (RuleCall)cGovernanceStrategyGovernanceStrategyCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cResourcesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cResourcesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cResourcesAssetParserRuleCall_5_2_0 = (RuleCall)cResourcesAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cIdAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cIdINTTerminalRuleCall_7_0 = (RuleCall)cIdAssignment_7.eContents().get(0);
		
		//ServiceProvider:
		//	name=ID ("type" ":" type=[ServiceProviderType])? '{' ('assignTo' '{' assignTo+=[ServiceProvider] (','
		//	assignTo+=[ServiceProvider])* '}')? ('strategy' ":" governanceStrategy=[GovernanceStrategy])? ('resources' ':'
		//	resources+=Asset+)?
		//	'}'
		//	id=INT?;
		@Override public ParserRule getRule() { return rule; }

		//name=ID ("type" ":" type=[ServiceProviderType])? '{' ('assignTo' '{' assignTo+=[ServiceProvider] (','
		//assignTo+=[ServiceProvider])* '}')? ('strategy' ":" governanceStrategy=[GovernanceStrategy])? ('resources' ':'
		//resources+=Asset+)? '}' id=INT?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//("type" ":" type=[ServiceProviderType])?
		public Group getGroup_1() { return cGroup_1; }

		//"type"
		public Keyword getTypeKeyword_1_0() { return cTypeKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//type=[ServiceProviderType]
		public Assignment getTypeAssignment_1_2() { return cTypeAssignment_1_2; }

		//[ServiceProviderType]
		public CrossReference getTypeServiceProviderTypeCrossReference_1_2_0() { return cTypeServiceProviderTypeCrossReference_1_2_0; }

		//ID
		public RuleCall getTypeServiceProviderTypeIDTerminalRuleCall_1_2_0_1() { return cTypeServiceProviderTypeIDTerminalRuleCall_1_2_0_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//('assignTo' '{' assignTo+=[ServiceProvider] (',' assignTo+=[ServiceProvider])* '}')?
		public Group getGroup_3() { return cGroup_3; }

		//'assignTo'
		public Keyword getAssignToKeyword_3_0() { return cAssignToKeyword_3_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }

		//assignTo+=[ServiceProvider]
		public Assignment getAssignToAssignment_3_2() { return cAssignToAssignment_3_2; }

		//[ServiceProvider]
		public CrossReference getAssignToServiceProviderCrossReference_3_2_0() { return cAssignToServiceProviderCrossReference_3_2_0; }

		//ID
		public RuleCall getAssignToServiceProviderIDTerminalRuleCall_3_2_0_1() { return cAssignToServiceProviderIDTerminalRuleCall_3_2_0_1; }

		//(',' assignTo+=[ServiceProvider])*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//','
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//assignTo+=[ServiceProvider]
		public Assignment getAssignToAssignment_3_3_1() { return cAssignToAssignment_3_3_1; }

		//[ServiceProvider]
		public CrossReference getAssignToServiceProviderCrossReference_3_3_1_0() { return cAssignToServiceProviderCrossReference_3_3_1_0; }

		//ID
		public RuleCall getAssignToServiceProviderIDTerminalRuleCall_3_3_1_0_1() { return cAssignToServiceProviderIDTerminalRuleCall_3_3_1_0_1; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }

		//('strategy' ":" governanceStrategy=[GovernanceStrategy])?
		public Group getGroup_4() { return cGroup_4; }

		//'strategy'
		public Keyword getStrategyKeyword_4_0() { return cStrategyKeyword_4_0; }

		//":"
		public Keyword getColonKeyword_4_1() { return cColonKeyword_4_1; }

		//governanceStrategy=[GovernanceStrategy]
		public Assignment getGovernanceStrategyAssignment_4_2() { return cGovernanceStrategyAssignment_4_2; }

		//[GovernanceStrategy]
		public CrossReference getGovernanceStrategyGovernanceStrategyCrossReference_4_2_0() { return cGovernanceStrategyGovernanceStrategyCrossReference_4_2_0; }

		//ID
		public RuleCall getGovernanceStrategyGovernanceStrategyIDTerminalRuleCall_4_2_0_1() { return cGovernanceStrategyGovernanceStrategyIDTerminalRuleCall_4_2_0_1; }

		//('resources' ':' resources+=Asset+)?
		public Group getGroup_5() { return cGroup_5; }

		//'resources'
		public Keyword getResourcesKeyword_5_0() { return cResourcesKeyword_5_0; }

		//':'
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }

		//resources+=Asset+
		public Assignment getResourcesAssignment_5_2() { return cResourcesAssignment_5_2; }

		//Asset
		public RuleCall getResourcesAssetParserRuleCall_5_2_0() { return cResourcesAssetParserRuleCall_5_2_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//id=INT?
		public Assignment getIdAssignment_7() { return cIdAssignment_7; }

		//INT
		public RuleCall getIdINTTerminalRuleCall_7_0() { return cIdINTTerminalRuleCall_7_0; }
	}

	public class AssetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.Asset");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNumberAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNumberAbstractParameterParserRuleCall_2_0 = (RuleCall)cNumberAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSkillsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cColonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cSkillSetAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cSkillSetSkillParserRuleCall_4_2_0 = (RuleCall)cSkillSetAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cSkillSetAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cSkillSetSkillParserRuleCall_4_3_1_0 = (RuleCall)cSkillSetAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cIdAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cIdINTTerminalRuleCall_6_0 = (RuleCall)cIdAssignment_6.eContents().get(0);
		
		//Asset:
		//	name=ID '*' number=AbstractParameter '{' ('skills' ':' skillSet+=Skill (',' skillSet+=Skill)*)?
		//	'}'
		//	id=INT?;
		@Override public ParserRule getRule() { return rule; }

		//name=ID '*' number=AbstractParameter '{' ('skills' ':' skillSet+=Skill (',' skillSet+=Skill)*)? '}' id=INT?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//'*'
		public Keyword getAsteriskKeyword_1() { return cAsteriskKeyword_1; }

		//number=AbstractParameter
		public Assignment getNumberAssignment_2() { return cNumberAssignment_2; }

		//AbstractParameter
		public RuleCall getNumberAbstractParameterParserRuleCall_2_0() { return cNumberAbstractParameterParserRuleCall_2_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//('skills' ':' skillSet+=Skill (',' skillSet+=Skill)*)?
		public Group getGroup_4() { return cGroup_4; }

		//'skills'
		public Keyword getSkillsKeyword_4_0() { return cSkillsKeyword_4_0; }

		//':'
		public Keyword getColonKeyword_4_1() { return cColonKeyword_4_1; }

		//skillSet+=Skill
		public Assignment getSkillSetAssignment_4_2() { return cSkillSetAssignment_4_2; }

		//Skill
		public RuleCall getSkillSetSkillParserRuleCall_4_2_0() { return cSkillSetSkillParserRuleCall_4_2_0; }

		//(',' skillSet+=Skill)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//','
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//skillSet+=Skill
		public Assignment getSkillSetAssignment_4_3_1() { return cSkillSetAssignment_4_3_1; }

		//Skill
		public RuleCall getSkillSetSkillParserRuleCall_4_3_1_0() { return cSkillSetSkillParserRuleCall_4_3_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//id=INT?
		public Assignment getIdAssignment_6() { return cIdAssignment_6; }

		//INT
		public RuleCall getIdINTTerminalRuleCall_6_0() { return cIdINTTerminalRuleCall_6_0; }
	}

	public class SkillElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.Skill");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cServiceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cServiceServiceCrossReference_1_0 = (CrossReference)cServiceAssignment_1.eContents().get(0);
		private final RuleCall cServiceServiceIDTerminalRuleCall_1_0_1 = (RuleCall)cServiceServiceCrossReference_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEfficiencyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEfficiencyAbstractParameterParserRuleCall_3_0 = (RuleCall)cEfficiencyAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Skill:
		//	'[' service=[Service] ',' efficiency=AbstractParameter ']';
		@Override public ParserRule getRule() { return rule; }

		//'[' service=[Service] ',' efficiency=AbstractParameter ']'
		public Group getGroup() { return cGroup; }

		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//service=[Service]
		public Assignment getServiceAssignment_1() { return cServiceAssignment_1; }

		//[Service]
		public CrossReference getServiceServiceCrossReference_1_0() { return cServiceServiceCrossReference_1_0; }

		//ID
		public RuleCall getServiceServiceIDTerminalRuleCall_1_0_1() { return cServiceServiceIDTerminalRuleCall_1_0_1; }

		//','
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//efficiency=AbstractParameter
		public Assignment getEfficiencyAssignment_3() { return cEfficiencyAssignment_3; }

		//AbstractParameter
		public RuleCall getEfficiencyAbstractParameterParserRuleCall_3_0() { return cEfficiencyAbstractParameterParserRuleCall_3_0; }

		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class ExperimentVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.ExperimentVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cBooleanAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final Keyword cBooleanBooleanKeyword_2_0_0_0 = (Keyword)cBooleanAssignment_2_0_0.eContents().get(0);
		private final Assignment cBooleanValueAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cBooleanValueBOOLEANTerminalRuleCall_2_0_1_0 = (RuleCall)cBooleanValueAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Assignment cNumAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final Keyword cNumNumKeyword_2_1_0_0 = (Keyword)cNumAssignment_2_1_0.eContents().get(0);
		private final Assignment cNumValueAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cNumValueNumberParserRuleCall_2_1_1_0 = (RuleCall)cNumValueAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Assignment cDistributionAssignment_2_2_0 = (Assignment)cGroup_2_2.eContents().get(0);
		private final Keyword cDistributionRandomKeyword_2_2_0_0 = (Keyword)cDistributionAssignment_2_2_0.eContents().get(0);
		private final Assignment cNumDistAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cNumDistDistributionParserRuleCall_2_2_1_0 = (RuleCall)cNumDistAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cAlternatives_2.eContents().get(3);
		private final Assignment cStringAssignment_2_3_0 = (Assignment)cGroup_2_3.eContents().get(0);
		private final Keyword cStringStringKeyword_2_3_0_0 = (Keyword)cStringAssignment_2_3_0.eContents().get(0);
		private final Assignment cStringValueAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cStringValueSTRINGTerminalRuleCall_2_3_1_0 = (RuleCall)cStringValueAssignment_2_3_1.eContents().get(0);
		private final Group cGroup_2_4 = (Group)cAlternatives_2.eContents().get(4);
		private final Assignment cStrategyAssignment_2_4_0 = (Assignment)cGroup_2_4.eContents().get(0);
		private final Keyword cStrategyGovernanceStrategyKeyword_2_4_0_0 = (Keyword)cStrategyAssignment_2_4_0.eContents().get(0);
		private final Assignment cStrategyValueAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cStrategyValueGovernanceStrategyParserRuleCall_2_4_1_0 = (RuleCall)cStrategyValueAssignment_2_4_1.eContents().get(0);
		
		//// ------------------------ Experiment Objects ---------------------------------
		//ExperimentVariable:
		//	name=ID ":" (boolean?="boolean" booleanValue=BOOLEAN | num?="num" numValue=Number | distribution?='Random.'
		//	numDist=Distribution | string?="string" stringValue=STRING | strategy?="GovernanceStrategy"
		//	strategyValue=GovernanceStrategy);
		@Override public ParserRule getRule() { return rule; }

		//name=ID ":" (boolean?="boolean" booleanValue=BOOLEAN | num?="num" numValue=Number | distribution?='Random.'
		//numDist=Distribution | string?="string" stringValue=STRING | strategy?="GovernanceStrategy"
		//strategyValue=GovernanceStrategy)
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//boolean?="boolean" booleanValue=BOOLEAN | num?="num" numValue=Number | distribution?='Random.' numDist=Distribution |
		//string?="string" stringValue=STRING | strategy?="GovernanceStrategy" strategyValue=GovernanceStrategy
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//boolean?="boolean" booleanValue=BOOLEAN
		public Group getGroup_2_0() { return cGroup_2_0; }

		//boolean?="boolean"
		public Assignment getBooleanAssignment_2_0_0() { return cBooleanAssignment_2_0_0; }

		//"boolean"
		public Keyword getBooleanBooleanKeyword_2_0_0_0() { return cBooleanBooleanKeyword_2_0_0_0; }

		//booleanValue=BOOLEAN
		public Assignment getBooleanValueAssignment_2_0_1() { return cBooleanValueAssignment_2_0_1; }

		//BOOLEAN
		public RuleCall getBooleanValueBOOLEANTerminalRuleCall_2_0_1_0() { return cBooleanValueBOOLEANTerminalRuleCall_2_0_1_0; }

		//num?="num" numValue=Number
		public Group getGroup_2_1() { return cGroup_2_1; }

		//num?="num"
		public Assignment getNumAssignment_2_1_0() { return cNumAssignment_2_1_0; }

		//"num"
		public Keyword getNumNumKeyword_2_1_0_0() { return cNumNumKeyword_2_1_0_0; }

		//numValue=Number
		public Assignment getNumValueAssignment_2_1_1() { return cNumValueAssignment_2_1_1; }

		//Number
		public RuleCall getNumValueNumberParserRuleCall_2_1_1_0() { return cNumValueNumberParserRuleCall_2_1_1_0; }

		//distribution?='Random.' numDist=Distribution
		public Group getGroup_2_2() { return cGroup_2_2; }

		//distribution?='Random.'
		public Assignment getDistributionAssignment_2_2_0() { return cDistributionAssignment_2_2_0; }

		//'Random.'
		public Keyword getDistributionRandomKeyword_2_2_0_0() { return cDistributionRandomKeyword_2_2_0_0; }

		//numDist=Distribution
		public Assignment getNumDistAssignment_2_2_1() { return cNumDistAssignment_2_2_1; }

		//Distribution
		public RuleCall getNumDistDistributionParserRuleCall_2_2_1_0() { return cNumDistDistributionParserRuleCall_2_2_1_0; }

		//string?="string" stringValue=STRING
		public Group getGroup_2_3() { return cGroup_2_3; }

		//string?="string"
		public Assignment getStringAssignment_2_3_0() { return cStringAssignment_2_3_0; }

		//"string"
		public Keyword getStringStringKeyword_2_3_0_0() { return cStringStringKeyword_2_3_0_0; }

		//stringValue=STRING
		public Assignment getStringValueAssignment_2_3_1() { return cStringValueAssignment_2_3_1; }

		//STRING
		public RuleCall getStringValueSTRINGTerminalRuleCall_2_3_1_0() { return cStringValueSTRINGTerminalRuleCall_2_3_1_0; }

		//strategy?="GovernanceStrategy" strategyValue=GovernanceStrategy
		public Group getGroup_2_4() { return cGroup_2_4; }

		//strategy?="GovernanceStrategy"
		public Assignment getStrategyAssignment_2_4_0() { return cStrategyAssignment_2_4_0; }

		//"GovernanceStrategy"
		public Keyword getStrategyGovernanceStrategyKeyword_2_4_0_0() { return cStrategyGovernanceStrategyKeyword_2_4_0_0; }

		//strategyValue=GovernanceStrategy
		public Assignment getStrategyValueAssignment_2_4_1() { return cStrategyValueAssignment_2_4_1; }

		//GovernanceStrategy
		public RuleCall getStrategyValueGovernanceStrategyParserRuleCall_2_4_1_0() { return cStrategyValueGovernanceStrategyParserRuleCall_2_4_1_0; }
	}

	public class WINReplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.WINReplication");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cWorkItemNetworkAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cWorkItemNetworkWorkItemNetworkCrossReference_0_0 = (CrossReference)cWorkItemNetworkAssignment_0.eContents().get(0);
		private final RuleCall cWorkItemNetworkWorkItemNetworkIDTerminalRuleCall_0_0_1 = (RuleCall)cWorkItemNetworkWorkItemNetworkCrossReference_0_0.eContents().get(1);
		private final Keyword cAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNumReplicationsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNumReplicationsINTTerminalRuleCall_2_0 = (RuleCall)cNumReplicationsAssignment_2.eContents().get(0);
		
		//WINReplication:
		//	workItemNetwork=[WorkItemNetwork]
		//	'*' numReplications=INT;
		@Override public ParserRule getRule() { return rule; }

		//workItemNetwork=[WorkItemNetwork] '*' numReplications=INT
		public Group getGroup() { return cGroup; }

		//workItemNetwork=[WorkItemNetwork]
		public Assignment getWorkItemNetworkAssignment_0() { return cWorkItemNetworkAssignment_0; }

		//[WorkItemNetwork]
		public CrossReference getWorkItemNetworkWorkItemNetworkCrossReference_0_0() { return cWorkItemNetworkWorkItemNetworkCrossReference_0_0; }

		//ID
		public RuleCall getWorkItemNetworkWorkItemNetworkIDTerminalRuleCall_0_0_1() { return cWorkItemNetworkWorkItemNetworkIDTerminalRuleCall_0_0_1; }

		//'*'
		public Keyword getAsteriskKeyword_1() { return cAsteriskKeyword_1; }

		//numReplications=INT
		public Assignment getNumReplicationsAssignment_2() { return cNumReplicationsAssignment_2; }

		//INT
		public RuleCall getNumReplicationsINTTerminalRuleCall_2_0() { return cNumReplicationsINTTerminalRuleCall_2_0; }
	}
	
	
	private final ModelBuilderElements pModelBuilder;
	private final UserLibrariesElements pUserLibraries;
	private final ExperimentModelElements pExperimentModel;
	private final TerminalRule tDOUBLE;
	private final TerminalRule tBOOLEAN;
	private final NumberElements pNumber;
	private final ParameterElements pParameter;
	private final AbstractParameterElements pAbstractParameter;
	private final NumExpressionElements pNumExpression;
	private final DistributionElements pDistribution;
	private final GovernanceStrategyElements pGovernanceStrategy;
	private final PullStrategyElements pPullStrategy;
	private final MechanismElements pMechanism;
	private final MechanismAttributeElements pMechanismAttribute;
	private final WorkItemTypeElements pWorkItemType;
	private final WorkItemNetworkElements pWorkItemNetwork;
	private final WorkItemElements pWorkItem;
	private final RequiredServiceElements pRequiredService;
	private final ImpactElements pImpact;
	private final ServiceProviderTypeElements pServiceProviderType;
	private final ServiceElements pService;
	private final ServiceProviderElements pServiceProvider;
	private final AssetElements pAsset;
	private final SkillElements pSkill;
	private final ExperimentVariableElements pExperimentVariable;
	private final WINReplicationElements pWINReplication;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DmodelGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModelBuilder = new ModelBuilderElements();
		this.pUserLibraries = new UserLibrariesElements();
		this.pExperimentModel = new ExperimentModelElements();
		this.tDOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.DOUBLE");
		this.tBOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "datasemModeller.Dmodel.BOOLEAN");
		this.pNumber = new NumberElements();
		this.pParameter = new ParameterElements();
		this.pAbstractParameter = new AbstractParameterElements();
		this.pNumExpression = new NumExpressionElements();
		this.pDistribution = new DistributionElements();
		this.pGovernanceStrategy = new GovernanceStrategyElements();
		this.pPullStrategy = new PullStrategyElements();
		this.pMechanism = new MechanismElements();
		this.pMechanismAttribute = new MechanismAttributeElements();
		this.pWorkItemType = new WorkItemTypeElements();
		this.pWorkItemNetwork = new WorkItemNetworkElements();
		this.pWorkItem = new WorkItemElements();
		this.pRequiredService = new RequiredServiceElements();
		this.pImpact = new ImpactElements();
		this.pServiceProviderType = new ServiceProviderTypeElements();
		this.pService = new ServiceElements();
		this.pServiceProvider = new ServiceProviderElements();
		this.pAsset = new AssetElements();
		this.pSkill = new SkillElements();
		this.pExperimentVariable = new ExperimentVariableElements();
		this.pWINReplication = new WINReplicationElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("datasemModeller.Dmodel".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ModelBuilder:
	//	'ModelBuilder' name=ID
	//	UserLibraries=UserLibraries
	//	ExperimentModel=ExperimentModel;
	public ModelBuilderElements getModelBuilderAccess() {
		return pModelBuilder;
	}
	
	public ParserRule getModelBuilderRule() {
		return getModelBuilderAccess().getRule();
	}

	//UserLibraries:
	//	'UserLibraries'
	//	'ServiceProviderTypes'
	//	ServiceProviderTypes+=ServiceProviderType+
	//	'end ServiceProviderTypes'
	//	'WorkItemTypes' WorkItemTypes+=WorkItemType+
	//	'end WorkItemTypes'
	//	'Services'
	//	Services+=Service+
	//	'end Services'
	//	'GovernanceStrategies'
	//	GovernanceStrategies+=GovernanceStrategy*
	//	'end GovernanceStrategies'
	//	'end UserLibraries';
	public UserLibrariesElements getUserLibrariesAccess() {
		return pUserLibraries;
	}
	
	public ParserRule getUserLibrariesRule() {
		return getUserLibrariesAccess().getRule();
	}

	//ExperimentModel:
	//	'ExperimentModel' name=ID
	//	"Variables"
	//	ExperimentVariables+=ExperimentVariable*
	//	"end Variables"
	//	'OrganizationalModel'
	//	'ServiceProviders'
	//	ServiceProviders+=ServiceProvider+
	//	'end ServiceProviders'
	//	'end OrganizationalModel'
	//	'WorkItemNetworkModel'
	//	'WorkItemNetworks'
	//	WorkItemNetworks+=WorkItemNetwork+
	//	'end WorkItemNetworks'
	//	'end WorkItemNetworkModel'
	//	'ExperimentSettings'
	//	'WINReplications'
	//	WINReplications+=WINReplication+
	//	'end WINReplications'
	//	'end ExperimentSettings'
	//	'end ExperimentModel';
	public ExperimentModelElements getExperimentModelAccess() {
		return pExperimentModel;
	}
	
	public ParserRule getExperimentModelRule() {
		return getExperimentModelAccess().getRule();
	}

	//terminal DOUBLE returns ecore::EDouble:
	//	'0'..'9'+ ('.' '0'..'9'+);
	public TerminalRule getDOUBLERule() {
		return tDOUBLE;
	} 

	//terminal BOOLEAN returns ecore::EBoolean:
	//	'false' | 'true';
	public TerminalRule getBOOLEANRule() {
		return tBOOLEAN;
	} 

	//Number:
	//	INT | DOUBLE;
	public NumberElements getNumberAccess() {
		return pNumber;
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}

	//Parameter:
	//	Number | STRING | ID | BOOLEAN;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}

	//AbstractParameter:
	//	isVariable?="var:" variable=[ExperimentVariable] | value=Parameter;
	public AbstractParameterElements getAbstractParameterAccess() {
		return pAbstractParameter;
	}
	
	public ParserRule getAbstractParameterRule() {
		return getAbstractParameterAccess().getRule();
	}

	//NumExpression:
	//	numValue=Number | distribution?='Random.' numDist=Distribution;
	public NumExpressionElements getNumExpressionAccess() {
		return pNumExpression;
	}
	
	public ParserRule getNumExpressionRule() {
		return getNumExpressionAccess().getRule();
	}

	//Distribution:
	//	(isNormal?="Normal" | isUniform?="Uniform" | isExponential?="Exponential")
	//	'[' parameters+=Parameter (',' parameters+=Parameter)* ']';
	public DistributionElements getDistributionAccess() {
		return pDistribution;
	}
	
	public ParserRule getDistributionRule() {
		return getDistributionAccess().getRule();
	}

	//// ------------------------ Governance Objects ---------------------------------
	//GovernanceStrategy:
	//	name=ID
	//	"{"
	//	pullStrategy=PullStrategy
	//	"}";
	public GovernanceStrategyElements getGovernanceStrategyAccess() {
		return pGovernanceStrategy;
	}
	
	public ParserRule getGovernanceStrategyRule() {
		return getGovernanceStrategyAccess().getRule();
	}

	//PullStrategy:
	//	'mechanisms' '{' mechanisms+=Mechanism+ '}';
	public PullStrategyElements getPullStrategyAccess() {
		return pPullStrategy;
	}
	
	public ParserRule getPullStrategyRule() {
		return getPullStrategyAccess().getRule();
	}

	//Mechanism:
	//	name=ID '=' value=Parameter ('{' ('attributes' '{' attributes+=MechanismAttribute (','
	//	attributes+=MechanismAttribute)* '}')?
	//	'}')?;
	public MechanismElements getMechanismAccess() {
		return pMechanism;
	}
	
	public ParserRule getMechanismRule() {
		return getMechanismAccess().getRule();
	}

	//MechanismAttribute:
	//	name=ID '=' value=Parameter;
	public MechanismAttributeElements getMechanismAttributeAccess() {
		return pMechanismAttribute;
	}
	
	public ParserRule getMechanismAttributeRule() {
		return getMechanismAttributeAccess().getRule();
	}

	//// ------------------------ WorkItem Objects ---------------------------------
	//WorkItemType:
	//	name=ID '{' ('hierarchy' '=' hierarchy=INT)?
	//	'}'
	//	id=INT?;
	public WorkItemTypeElements getWorkItemTypeAccess() {
		return pWorkItemType;
	}
	
	public ParserRule getWorkItemTypeRule() {
		return getWorkItemTypeAccess().getRule();
	}

	//WorkItemNetwork:
	//	'WorkItemNetwork' name=ID '{'
	//	'WorkItems' '{' workItems+=WorkItem+ '}'
	//	'}'
	//	id=INT?;
	public WorkItemNetworkElements getWorkItemNetworkAccess() {
		return pWorkItemNetwork;
	}
	
	public ParserRule getWorkItemNetworkRule() {
		return getWorkItemNetworkAccess().getRule();
	}

	//WorkItem:
	//	name=ID ("type" ":" type=[WorkItemType])? '{' (hasPredecessors?='prerequisites' '{' pTasks+=[WorkItem] (','
	//	pTasks+=[WorkItem])* '}')? ((hasSubtasks?='decomposites' '{' sTasks+=[WorkItem] (',' sTasks+=[WorkItem])* '}'
	//	('analysisEfforts' '{' requiredAnalysis+=RequiredService (',' requiredAnalysis+=RequiredService)* '}')?)?
	//	| ('analysisEfforts' '{' requiredAnalysis+=RequiredService (',' requiredAnalysis+=RequiredService)* '}')?
	//	'efforts' '{' requiredServices+=RequiredService (',' requiredServices+=RequiredService)* '}') (hasImpacts?='impacts'
	//	'{' impacts+=Impact (',' impacts+=Impact)* '}')? ('value' value=NumExpression)? ('arrival' arrivalTime=INT)?
	//	('duration' duration=INT)?
	//	'}'
	//	id=INT?;
	public WorkItemElements getWorkItemAccess() {
		return pWorkItem;
	}
	
	public ParserRule getWorkItemRule() {
		return getWorkItemAccess().getRule();
	}

	//RequiredService:
	//	"[" serviceType=[Service] "," efforts=AbstractParameter "]";
	public RequiredServiceElements getRequiredServiceAccess() {
		return pRequiredService;
	}
	
	public ParserRule getRequiredServiceRule() {
		return getRequiredServiceAccess().getRule();
	}

	//Impact:
	//	impactWI=[WorkItem] '[' likelihood=AbstractParameter ',' risk=AbstractParameter ']';
	public ImpactElements getImpactAccess() {
		return pImpact;
	}
	
	public ParserRule getImpactRule() {
		return getImpactAccess().getRule();
	}

	//// ------------------------ Organizational Objects ---------------------------------
	//ServiceProviderType:
	//	id=INT?
	//	name=ID '{' ('hierarchy' '=' hierarchy=INT)?
	//	'}';
	public ServiceProviderTypeElements getServiceProviderTypeAccess() {
		return pServiceProviderType;
	}
	
	public ParserRule getServiceProviderTypeRule() {
		return getServiceProviderTypeAccess().getRule();
	}

	//Service:
	//	name=ID ('{' ('hierarchy' '=' hierarchy=INT)?
	//	'}')?
	//	id=INT?;
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}

	//ServiceProvider:
	//	name=ID ("type" ":" type=[ServiceProviderType])? '{' ('assignTo' '{' assignTo+=[ServiceProvider] (','
	//	assignTo+=[ServiceProvider])* '}')? ('strategy' ":" governanceStrategy=[GovernanceStrategy])? ('resources' ':'
	//	resources+=Asset+)?
	//	'}'
	//	id=INT?;
	public ServiceProviderElements getServiceProviderAccess() {
		return pServiceProvider;
	}
	
	public ParserRule getServiceProviderRule() {
		return getServiceProviderAccess().getRule();
	}

	//Asset:
	//	name=ID '*' number=AbstractParameter '{' ('skills' ':' skillSet+=Skill (',' skillSet+=Skill)*)?
	//	'}'
	//	id=INT?;
	public AssetElements getAssetAccess() {
		return pAsset;
	}
	
	public ParserRule getAssetRule() {
		return getAssetAccess().getRule();
	}

	//Skill:
	//	'[' service=[Service] ',' efficiency=AbstractParameter ']';
	public SkillElements getSkillAccess() {
		return pSkill;
	}
	
	public ParserRule getSkillRule() {
		return getSkillAccess().getRule();
	}

	//// ------------------------ Experiment Objects ---------------------------------
	//ExperimentVariable:
	//	name=ID ":" (boolean?="boolean" booleanValue=BOOLEAN | num?="num" numValue=Number | distribution?='Random.'
	//	numDist=Distribution | string?="string" stringValue=STRING | strategy?="GovernanceStrategy"
	//	strategyValue=GovernanceStrategy);
	public ExperimentVariableElements getExperimentVariableAccess() {
		return pExperimentVariable;
	}
	
	public ParserRule getExperimentVariableRule() {
		return getExperimentVariableAccess().getRule();
	}

	//WINReplication:
	//	workItemNetwork=[WorkItemNetwork]
	//	'*' numReplications=INT;
	public WINReplicationElements getWINReplicationAccess() {
		return pWINReplication;
	}
	
	public ParserRule getWINReplicationRule() {
		return getWINReplicationAccess().getRule();
	}

	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
