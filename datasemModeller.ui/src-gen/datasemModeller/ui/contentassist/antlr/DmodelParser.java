/*
 * generated by Xtext
 */
package datasemModeller.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import datasemModeller.services.DmodelGrammarAccess;

public class DmodelParser extends AbstractContentAssistParser {
	
	@Inject
	private DmodelGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected datasemModeller.ui.contentassist.antlr.internal.InternalDmodelParser createParser() {
		datasemModeller.ui.contentassist.antlr.internal.InternalDmodelParser result = new datasemModeller.ui.contentassist.antlr.internal.InternalDmodelParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getNumberAccess().getAlternatives(), "rule__Number__Alternatives");
					put(grammarAccess.getParameterAccess().getAlternatives(), "rule__Parameter__Alternatives");
					put(grammarAccess.getAbstractParameterAccess().getAlternatives(), "rule__AbstractParameter__Alternatives");
					put(grammarAccess.getNumExpressionAccess().getAlternatives(), "rule__NumExpression__Alternatives");
					put(grammarAccess.getDistributionAccess().getAlternatives_0(), "rule__Distribution__Alternatives_0");
					put(grammarAccess.getGovernanceStrategyAccess().getAlternatives(), "rule__GovernanceStrategy__Alternatives");
					put(grammarAccess.getGovernanceStrategyAccess().getAlternatives_0_1_2(), "rule__GovernanceStrategy__Alternatives_0_1_2");
					put(grammarAccess.getWorkItemAccess().getAlternatives_4(), "rule__WorkItem__Alternatives_4");
					put(grammarAccess.getExperimentVariableAccess().getAlternatives_2(), "rule__ExperimentVariable__Alternatives_2");
					put(grammarAccess.getModelBuilderAccess().getGroup(), "rule__ModelBuilder__Group__0");
					put(grammarAccess.getUserLibrariesAccess().getGroup(), "rule__UserLibraries__Group__0");
					put(grammarAccess.getExperimentModelAccess().getGroup(), "rule__ExperimentModel__Group__0");
					put(grammarAccess.getAbstractParameterAccess().getGroup_0(), "rule__AbstractParameter__Group_0__0");
					put(grammarAccess.getNumExpressionAccess().getGroup_1(), "rule__NumExpression__Group_1__0");
					put(grammarAccess.getDistributionAccess().getGroup(), "rule__Distribution__Group__0");
					put(grammarAccess.getDistributionAccess().getGroup_3(), "rule__Distribution__Group_3__0");
					put(grammarAccess.getGovernanceStrategyAccess().getGroup_0(), "rule__GovernanceStrategy__Group_0__0");
					put(grammarAccess.getGovernanceStrategyAccess().getGroup_0_1(), "rule__GovernanceStrategy__Group_0_1__0");
					put(grammarAccess.getGovernanceStrategyAccess().getGroup_0_1_2_0(), "rule__GovernanceStrategy__Group_0_1_2_0__0");
					put(grammarAccess.getGovernanceStrategyAccess().getGroup_0_1_2_1(), "rule__GovernanceStrategy__Group_0_1_2_1__0");
					put(grammarAccess.getGovernanceStrategyAccess().getGroup_1(), "rule__GovernanceStrategy__Group_1__0");
					put(grammarAccess.getPullStrategyAccess().getGroup(), "rule__PullStrategy__Group__0");
					put(grammarAccess.getPushStrategyAccess().getGroup(), "rule__PushStrategy__Group__0");
					put(grammarAccess.getMechanismAccess().getGroup(), "rule__Mechanism__Group__0");
					put(grammarAccess.getMechanismAccess().getGroup_3(), "rule__Mechanism__Group_3__0");
					put(grammarAccess.getMechanismAccess().getGroup_3_1(), "rule__Mechanism__Group_3_1__0");
					put(grammarAccess.getMechanismAccess().getGroup_3_1_1(), "rule__Mechanism__Group_3_1_1__0");
					put(grammarAccess.getMechanismAttributeAccess().getGroup(), "rule__MechanismAttribute__Group__0");
					put(grammarAccess.getWorkItemTypeAccess().getGroup(), "rule__WorkItemType__Group__0");
					put(grammarAccess.getWorkItemTypeAccess().getGroup_2(), "rule__WorkItemType__Group_2__0");
					put(grammarAccess.getWorkItemNetworkAccess().getGroup(), "rule__WorkItemNetwork__Group__0");
					put(grammarAccess.getWorkItemAccess().getGroup(), "rule__WorkItem__Group__0");
					put(grammarAccess.getWorkItemAccess().getGroup_1(), "rule__WorkItem__Group_1__0");
					put(grammarAccess.getWorkItemAccess().getGroup_3(), "rule__WorkItem__Group_3__0");
					put(grammarAccess.getWorkItemAccess().getGroup_3_3(), "rule__WorkItem__Group_3_3__0");
					put(grammarAccess.getWorkItemAccess().getGroup_4_0(), "rule__WorkItem__Group_4_0__0");
					put(grammarAccess.getWorkItemAccess().getGroup_4_0_3(), "rule__WorkItem__Group_4_0_3__0");
					put(grammarAccess.getWorkItemAccess().getGroup_4_0_5(), "rule__WorkItem__Group_4_0_5__0");
					put(grammarAccess.getWorkItemAccess().getGroup_4_0_5_3(), "rule__WorkItem__Group_4_0_5_3__0");
					put(grammarAccess.getWorkItemAccess().getGroup_4_1(), "rule__WorkItem__Group_4_1__0");
					put(grammarAccess.getWorkItemAccess().getGroup_4_1_0(), "rule__WorkItem__Group_4_1_0__0");
					put(grammarAccess.getWorkItemAccess().getGroup_4_1_0_3(), "rule__WorkItem__Group_4_1_0_3__0");
					put(grammarAccess.getWorkItemAccess().getGroup_4_1_4(), "rule__WorkItem__Group_4_1_4__0");
					put(grammarAccess.getWorkItemAccess().getGroup_5(), "rule__WorkItem__Group_5__0");
					put(grammarAccess.getWorkItemAccess().getGroup_5_3(), "rule__WorkItem__Group_5_3__0");
					put(grammarAccess.getWorkItemAccess().getGroup_6(), "rule__WorkItem__Group_6__0");
					put(grammarAccess.getWorkItemAccess().getGroup_7(), "rule__WorkItem__Group_7__0");
					put(grammarAccess.getWorkItemAccess().getGroup_8(), "rule__WorkItem__Group_8__0");
					put(grammarAccess.getRequiredServiceAccess().getGroup(), "rule__RequiredService__Group__0");
					put(grammarAccess.getImpactAccess().getGroup(), "rule__Impact__Group__0");
					put(grammarAccess.getServiceProviderTypeAccess().getGroup(), "rule__ServiceProviderType__Group__0");
					put(grammarAccess.getServiceProviderTypeAccess().getGroup_3(), "rule__ServiceProviderType__Group_3__0");
					put(grammarAccess.getServiceAccess().getGroup(), "rule__Service__Group__0");
					put(grammarAccess.getServiceAccess().getGroup_1(), "rule__Service__Group_1__0");
					put(grammarAccess.getServiceAccess().getGroup_1_1(), "rule__Service__Group_1_1__0");
					put(grammarAccess.getServiceProviderAccess().getGroup(), "rule__ServiceProvider__Group__0");
					put(grammarAccess.getServiceProviderAccess().getGroup_1(), "rule__ServiceProvider__Group_1__0");
					put(grammarAccess.getServiceProviderAccess().getGroup_3(), "rule__ServiceProvider__Group_3__0");
					put(grammarAccess.getServiceProviderAccess().getGroup_3_3(), "rule__ServiceProvider__Group_3_3__0");
					put(grammarAccess.getServiceProviderAccess().getGroup_4(), "rule__ServiceProvider__Group_4__0");
					put(grammarAccess.getServiceProviderAccess().getGroup_5(), "rule__ServiceProvider__Group_5__0");
					put(grammarAccess.getServiceProviderAccess().getGroup_5_2(), "rule__ServiceProvider__Group_5_2__0");
					put(grammarAccess.getServiceProviderAccess().getGroup_6(), "rule__ServiceProvider__Group_6__0");
					put(grammarAccess.getAssetAccess().getGroup(), "rule__Asset__Group__0");
					put(grammarAccess.getAssetAccess().getGroup_4(), "rule__Asset__Group_4__0");
					put(grammarAccess.getAssetAccess().getGroup_4_3(), "rule__Asset__Group_4_3__0");
					put(grammarAccess.getSkillAccess().getGroup(), "rule__Skill__Group__0");
					put(grammarAccess.getExperimentVariableAccess().getGroup(), "rule__ExperimentVariable__Group__0");
					put(grammarAccess.getExperimentVariableAccess().getGroup_2_0(), "rule__ExperimentVariable__Group_2_0__0");
					put(grammarAccess.getExperimentVariableAccess().getGroup_2_1(), "rule__ExperimentVariable__Group_2_1__0");
					put(grammarAccess.getExperimentVariableAccess().getGroup_2_2(), "rule__ExperimentVariable__Group_2_2__0");
					put(grammarAccess.getExperimentVariableAccess().getGroup_2_3(), "rule__ExperimentVariable__Group_2_3__0");
					put(grammarAccess.getExperimentVariableAccess().getGroup_2_4(), "rule__ExperimentVariable__Group_2_4__0");
					put(grammarAccess.getWINReplicationAccess().getGroup(), "rule__WINReplication__Group__0");
					put(grammarAccess.getWINReplicationAccess().getGroup_6(), "rule__WINReplication__Group_6__0");
					put(grammarAccess.getModelBuilderAccess().getNameAssignment_1(), "rule__ModelBuilder__NameAssignment_1");
					put(grammarAccess.getModelBuilderAccess().getUserLibrariesAssignment_2(), "rule__ModelBuilder__UserLibrariesAssignment_2");
					put(grammarAccess.getModelBuilderAccess().getExperimentModelAssignment_3(), "rule__ModelBuilder__ExperimentModelAssignment_3");
					put(grammarAccess.getUserLibrariesAccess().getServiceProviderTypesAssignment_2(), "rule__UserLibraries__ServiceProviderTypesAssignment_2");
					put(grammarAccess.getUserLibrariesAccess().getWorkItemTypesAssignment_5(), "rule__UserLibraries__WorkItemTypesAssignment_5");
					put(grammarAccess.getUserLibrariesAccess().getServicesAssignment_8(), "rule__UserLibraries__ServicesAssignment_8");
					put(grammarAccess.getUserLibrariesAccess().getGovernanceStrategiesAssignment_11(), "rule__UserLibraries__GovernanceStrategiesAssignment_11");
					put(grammarAccess.getExperimentModelAccess().getNameAssignment_1(), "rule__ExperimentModel__NameAssignment_1");
					put(grammarAccess.getExperimentModelAccess().getExperimentVariablesAssignment_3(), "rule__ExperimentModel__ExperimentVariablesAssignment_3");
					put(grammarAccess.getExperimentModelAccess().getServiceProvidersAssignment_7(), "rule__ExperimentModel__ServiceProvidersAssignment_7");
					put(grammarAccess.getExperimentModelAccess().getWorkItemNetworksAssignment_12(), "rule__ExperimentModel__WorkItemNetworksAssignment_12");
					put(grammarAccess.getExperimentModelAccess().getWINReplicationsAssignment_17(), "rule__ExperimentModel__WINReplicationsAssignment_17");
					put(grammarAccess.getExperimentModelAccess().getExperimentParametersAssignment_20(), "rule__ExperimentModel__ExperimentParametersAssignment_20");
					put(grammarAccess.getAbstractParameterAccess().getIsVariableAssignment_0_0(), "rule__AbstractParameter__IsVariableAssignment_0_0");
					put(grammarAccess.getAbstractParameterAccess().getVariableAssignment_0_1(), "rule__AbstractParameter__VariableAssignment_0_1");
					put(grammarAccess.getAbstractParameterAccess().getValueAssignment_1(), "rule__AbstractParameter__ValueAssignment_1");
					put(grammarAccess.getNumExpressionAccess().getNumValueAssignment_0(), "rule__NumExpression__NumValueAssignment_0");
					put(grammarAccess.getNumExpressionAccess().getDistributionAssignment_1_0(), "rule__NumExpression__DistributionAssignment_1_0");
					put(grammarAccess.getNumExpressionAccess().getNumDistAssignment_1_1(), "rule__NumExpression__NumDistAssignment_1_1");
					put(grammarAccess.getDistributionAccess().getIsNormalAssignment_0_0(), "rule__Distribution__IsNormalAssignment_0_0");
					put(grammarAccess.getDistributionAccess().getIsUniformAssignment_0_1(), "rule__Distribution__IsUniformAssignment_0_1");
					put(grammarAccess.getDistributionAccess().getIsExponentialAssignment_0_2(), "rule__Distribution__IsExponentialAssignment_0_2");
					put(grammarAccess.getDistributionAccess().getParametersAssignment_2(), "rule__Distribution__ParametersAssignment_2");
					put(grammarAccess.getDistributionAccess().getParametersAssignment_3_1(), "rule__Distribution__ParametersAssignment_3_1");
					put(grammarAccess.getGovernanceStrategyAccess().getNameAssignment_0_0(), "rule__GovernanceStrategy__NameAssignment_0_0");
					put(grammarAccess.getGovernanceStrategyAccess().getPullAssignment_0_1_2_0_0(), "rule__GovernanceStrategy__PullAssignment_0_1_2_0_0");
					put(grammarAccess.getGovernanceStrategyAccess().getPullStrategyAssignment_0_1_2_0_2(), "rule__GovernanceStrategy__PullStrategyAssignment_0_1_2_0_2");
					put(grammarAccess.getGovernanceStrategyAccess().getPushAssignment_0_1_2_1_0(), "rule__GovernanceStrategy__PushAssignment_0_1_2_1_0");
					put(grammarAccess.getGovernanceStrategyAccess().getPushStrategyAssignment_0_1_2_1_2(), "rule__GovernanceStrategy__PushStrategyAssignment_0_1_2_1_2");
					put(grammarAccess.getGovernanceStrategyAccess().getPushStrategyAssignment_1_1(), "rule__GovernanceStrategy__PushStrategyAssignment_1_1");
					put(grammarAccess.getPullStrategyAccess().getMechanismsAssignment_2(), "rule__PullStrategy__MechanismsAssignment_2");
					put(grammarAccess.getPushStrategyAccess().getMechanismsAssignment_2(), "rule__PushStrategy__MechanismsAssignment_2");
					put(grammarAccess.getMechanismAccess().getNameAssignment_0(), "rule__Mechanism__NameAssignment_0");
					put(grammarAccess.getMechanismAccess().getValueAssignment_2(), "rule__Mechanism__ValueAssignment_2");
					put(grammarAccess.getMechanismAccess().getAttributesAssignment_3_1_0(), "rule__Mechanism__AttributesAssignment_3_1_0");
					put(grammarAccess.getMechanismAccess().getAttributesAssignment_3_1_1_1(), "rule__Mechanism__AttributesAssignment_3_1_1_1");
					put(grammarAccess.getMechanismAttributeAccess().getNameAssignment_0(), "rule__MechanismAttribute__NameAssignment_0");
					put(grammarAccess.getMechanismAttributeAccess().getValueAssignment_2(), "rule__MechanismAttribute__ValueAssignment_2");
					put(grammarAccess.getWorkItemTypeAccess().getNameAssignment_0(), "rule__WorkItemType__NameAssignment_0");
					put(grammarAccess.getWorkItemTypeAccess().getHierarchyAssignment_2_2(), "rule__WorkItemType__HierarchyAssignment_2_2");
					put(grammarAccess.getWorkItemTypeAccess().getMechanismsAssignment_3(), "rule__WorkItemType__MechanismsAssignment_3");
					put(grammarAccess.getWorkItemTypeAccess().getIdAssignment_5(), "rule__WorkItemType__IdAssignment_5");
					put(grammarAccess.getWorkItemNetworkAccess().getNameAssignment_1(), "rule__WorkItemNetwork__NameAssignment_1");
					put(grammarAccess.getWorkItemNetworkAccess().getWorkItemsAssignment_5(), "rule__WorkItemNetwork__WorkItemsAssignment_5");
					put(grammarAccess.getWorkItemNetworkAccess().getIdAssignment_8(), "rule__WorkItemNetwork__IdAssignment_8");
					put(grammarAccess.getWorkItemAccess().getNameAssignment_0(), "rule__WorkItem__NameAssignment_0");
					put(grammarAccess.getWorkItemAccess().getTypeAssignment_1_2(), "rule__WorkItem__TypeAssignment_1_2");
					put(grammarAccess.getWorkItemAccess().getHasPredecessorsAssignment_3_0(), "rule__WorkItem__HasPredecessorsAssignment_3_0");
					put(grammarAccess.getWorkItemAccess().getPTasksAssignment_3_2(), "rule__WorkItem__PTasksAssignment_3_2");
					put(grammarAccess.getWorkItemAccess().getPTasksAssignment_3_3_1(), "rule__WorkItem__PTasksAssignment_3_3_1");
					put(grammarAccess.getWorkItemAccess().getHasSubtasksAssignment_4_0_0(), "rule__WorkItem__HasSubtasksAssignment_4_0_0");
					put(grammarAccess.getWorkItemAccess().getSTasksAssignment_4_0_2(), "rule__WorkItem__STasksAssignment_4_0_2");
					put(grammarAccess.getWorkItemAccess().getSTasksAssignment_4_0_3_1(), "rule__WorkItem__STasksAssignment_4_0_3_1");
					put(grammarAccess.getWorkItemAccess().getRequiredAnalysisAssignment_4_0_5_2(), "rule__WorkItem__RequiredAnalysisAssignment_4_0_5_2");
					put(grammarAccess.getWorkItemAccess().getRequiredAnalysisAssignment_4_0_5_3_1(), "rule__WorkItem__RequiredAnalysisAssignment_4_0_5_3_1");
					put(grammarAccess.getWorkItemAccess().getRequiredAnalysisAssignment_4_1_0_2(), "rule__WorkItem__RequiredAnalysisAssignment_4_1_0_2");
					put(grammarAccess.getWorkItemAccess().getRequiredAnalysisAssignment_4_1_0_3_1(), "rule__WorkItem__RequiredAnalysisAssignment_4_1_0_3_1");
					put(grammarAccess.getWorkItemAccess().getRequiredServicesAssignment_4_1_3(), "rule__WorkItem__RequiredServicesAssignment_4_1_3");
					put(grammarAccess.getWorkItemAccess().getRequiredServicesAssignment_4_1_4_1(), "rule__WorkItem__RequiredServicesAssignment_4_1_4_1");
					put(grammarAccess.getWorkItemAccess().getHasImpactsAssignment_5_0(), "rule__WorkItem__HasImpactsAssignment_5_0");
					put(grammarAccess.getWorkItemAccess().getImpactsAssignment_5_2(), "rule__WorkItem__ImpactsAssignment_5_2");
					put(grammarAccess.getWorkItemAccess().getImpactsAssignment_5_3_1(), "rule__WorkItem__ImpactsAssignment_5_3_1");
					put(grammarAccess.getWorkItemAccess().getValueAssignment_6_2(), "rule__WorkItem__ValueAssignment_6_2");
					put(grammarAccess.getWorkItemAccess().getArrivalTimeAssignment_7_2(), "rule__WorkItem__ArrivalTimeAssignment_7_2");
					put(grammarAccess.getWorkItemAccess().getDurationAssignment_8_2(), "rule__WorkItem__DurationAssignment_8_2");
					put(grammarAccess.getWorkItemAccess().getIdAssignment_10(), "rule__WorkItem__IdAssignment_10");
					put(grammarAccess.getRequiredServiceAccess().getServiceTypeAssignment_1(), "rule__RequiredService__ServiceTypeAssignment_1");
					put(grammarAccess.getRequiredServiceAccess().getEffortsAssignment_3(), "rule__RequiredService__EffortsAssignment_3");
					put(grammarAccess.getImpactAccess().getImpactWIAssignment_0(), "rule__Impact__ImpactWIAssignment_0");
					put(grammarAccess.getImpactAccess().getLikelihoodAssignment_2(), "rule__Impact__LikelihoodAssignment_2");
					put(grammarAccess.getImpactAccess().getRiskAssignment_4(), "rule__Impact__RiskAssignment_4");
					put(grammarAccess.getServiceProviderTypeAccess().getIdAssignment_0(), "rule__ServiceProviderType__IdAssignment_0");
					put(grammarAccess.getServiceProviderTypeAccess().getNameAssignment_1(), "rule__ServiceProviderType__NameAssignment_1");
					put(grammarAccess.getServiceProviderTypeAccess().getHierarchyAssignment_3_2(), "rule__ServiceProviderType__HierarchyAssignment_3_2");
					put(grammarAccess.getServiceAccess().getNameAssignment_0(), "rule__Service__NameAssignment_0");
					put(grammarAccess.getServiceAccess().getHierarchyAssignment_1_1_2(), "rule__Service__HierarchyAssignment_1_1_2");
					put(grammarAccess.getServiceAccess().getIdAssignment_2(), "rule__Service__IdAssignment_2");
					put(grammarAccess.getServiceProviderAccess().getNameAssignment_0(), "rule__ServiceProvider__NameAssignment_0");
					put(grammarAccess.getServiceProviderAccess().getTypeAssignment_1_2(), "rule__ServiceProvider__TypeAssignment_1_2");
					put(grammarAccess.getServiceProviderAccess().getAssignToAssignment_3_2(), "rule__ServiceProvider__AssignToAssignment_3_2");
					put(grammarAccess.getServiceProviderAccess().getAssignToAssignment_3_3_1(), "rule__ServiceProvider__AssignToAssignment_3_3_1");
					put(grammarAccess.getServiceProviderAccess().getGovernanceStrategyAssignment_4_2(), "rule__ServiceProvider__GovernanceStrategyAssignment_4_2");
					put(grammarAccess.getServiceProviderAccess().getStrategySpecsAssignment_5_1(), "rule__ServiceProvider__StrategySpecsAssignment_5_1");
					put(grammarAccess.getServiceProviderAccess().getStrategySpecsAssignment_5_2_1(), "rule__ServiceProvider__StrategySpecsAssignment_5_2_1");
					put(grammarAccess.getServiceProviderAccess().getResourcesAssignment_6_2(), "rule__ServiceProvider__ResourcesAssignment_6_2");
					put(grammarAccess.getServiceProviderAccess().getIdAssignment_8(), "rule__ServiceProvider__IdAssignment_8");
					put(grammarAccess.getAssetAccess().getNameAssignment_0(), "rule__Asset__NameAssignment_0");
					put(grammarAccess.getAssetAccess().getNumberAssignment_2(), "rule__Asset__NumberAssignment_2");
					put(grammarAccess.getAssetAccess().getSkillSetAssignment_4_2(), "rule__Asset__SkillSetAssignment_4_2");
					put(grammarAccess.getAssetAccess().getSkillSetAssignment_4_3_1(), "rule__Asset__SkillSetAssignment_4_3_1");
					put(grammarAccess.getAssetAccess().getIdAssignment_6(), "rule__Asset__IdAssignment_6");
					put(grammarAccess.getSkillAccess().getServiceAssignment_1(), "rule__Skill__ServiceAssignment_1");
					put(grammarAccess.getSkillAccess().getEfficiencyAssignment_3(), "rule__Skill__EfficiencyAssignment_3");
					put(grammarAccess.getExperimentVariableAccess().getNameAssignment_0(), "rule__ExperimentVariable__NameAssignment_0");
					put(grammarAccess.getExperimentVariableAccess().getBooleanAssignment_2_0_0(), "rule__ExperimentVariable__BooleanAssignment_2_0_0");
					put(grammarAccess.getExperimentVariableAccess().getBooleanValueAssignment_2_0_1(), "rule__ExperimentVariable__BooleanValueAssignment_2_0_1");
					put(grammarAccess.getExperimentVariableAccess().getNumAssignment_2_1_0(), "rule__ExperimentVariable__NumAssignment_2_1_0");
					put(grammarAccess.getExperimentVariableAccess().getNumValueAssignment_2_1_1(), "rule__ExperimentVariable__NumValueAssignment_2_1_1");
					put(grammarAccess.getExperimentVariableAccess().getDistributionAssignment_2_2_0(), "rule__ExperimentVariable__DistributionAssignment_2_2_0");
					put(grammarAccess.getExperimentVariableAccess().getNumDistAssignment_2_2_1(), "rule__ExperimentVariable__NumDistAssignment_2_2_1");
					put(grammarAccess.getExperimentVariableAccess().getStringAssignment_2_3_0(), "rule__ExperimentVariable__StringAssignment_2_3_0");
					put(grammarAccess.getExperimentVariableAccess().getStringValueAssignment_2_3_1(), "rule__ExperimentVariable__StringValueAssignment_2_3_1");
					put(grammarAccess.getExperimentVariableAccess().getStrategyAssignment_2_4_0(), "rule__ExperimentVariable__StrategyAssignment_2_4_0");
					put(grammarAccess.getExperimentVariableAccess().getStrategyValueAssignment_2_4_1(), "rule__ExperimentVariable__StrategyValueAssignment_2_4_1");
					put(grammarAccess.getWINReplicationAccess().getWorkItemNetworkAssignment_1(), "rule__WINReplication__WorkItemNetworkAssignment_1");
					put(grammarAccess.getWINReplicationAccess().getNumReplicationsAssignment_3(), "rule__WINReplication__NumReplicationsAssignment_3");
					put(grammarAccess.getWINReplicationAccess().getAssignToAssignment_5(), "rule__WINReplication__AssignToAssignment_5");
					put(grammarAccess.getWINReplicationAccess().getInterarrivalAssignment_6_3(), "rule__WINReplication__InterarrivalAssignment_6_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			datasemModeller.ui.contentassist.antlr.internal.InternalDmodelParser typedParser = (datasemModeller.ui.contentassist.antlr.internal.InternalDmodelParser) parser;
			typedParser.entryRuleModelBuilder();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public DmodelGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DmodelGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
